<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>대구 올빼미의 새벽 개발로그</title>
    <description>대구 올빼미의 새벽 개발로그</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 06 May 2019 14:00:28 +0900</pubDate>
    <lastBuildDate>Mon, 06 May 2019 14:00:28 +0900</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Django 15. 인스타그램(12~14) - 좋아요 및 저장한 포스팅 보기</title>
        <description>&lt;h3 id=&quot;20190505-인스타그램-클론-코딩하기좋아요-버튼-구현하기&quot;&gt;2019.05.05 인스타그램 클론 코딩하기(좋아요 버튼 구현하기)&lt;/h3&gt;

&lt;h1 id=&quot;인스타그램-만들기1214&quot;&gt;인스타그램 만들기(12~14)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fabl1106/dstagramproject&quot;&gt;dstagram 소스코드 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-로직&quot;&gt;구현 로직&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo 앱 만들기&lt;/li&gt;
  &lt;li&gt;모델 설계하기&lt;/li&gt;
  &lt;li&gt;views 설계하기
    &lt;ol&gt;
      &lt;li&gt;list페이지&lt;/li&gt;
      &lt;li&gt;상세페이지&lt;/li&gt;
      &lt;li&gt;삭제하기&lt;/li&gt;
      &lt;li&gt;수정하기&lt;/li&gt;
      &lt;li&gt;생성페이지&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결시켜주기&lt;/li&gt;
  &lt;li&gt;template 만들기
    &lt;ol&gt;
      &lt;li&gt;create/list/update/delete/detail&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;사진 화면에 업로드 할 수 있도록 만들기&lt;/li&gt;
  &lt;li&gt;success url을 get_absolute_url로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ol&gt;
      &lt;li&gt;로그인/로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;템플릿에 로그인/로그아웃 보이도록 하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 sign out가 안 보이도록 구현하기(분기)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;권한 문제 해결하기
    &lt;ol&gt;
      &lt;li&gt;html 기준에서 해결하기&lt;/li&gt;
      &lt;li&gt;링크로 들어와도 안 되도록 해결해보기
        &lt;ol&gt;
          &lt;li&gt;view를 조정하기&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ol&gt;
      &lt;li&gt;댓글은 상세페이지에서 가능하도록 하기&lt;/li&gt;
      &lt;li&gt;소셜 댓글기능으로 구현하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요/저장하기 버튼 만들기
    &lt;ol&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면  색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한 정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;저장하기 기능 추가하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅만 보기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;저장한 포스팅 리스트 페이지 구현하기&lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅 및 저장한 포스팅 리스트 보기는 로그인한 사람만 보여주기
    &lt;ol&gt;
      &lt;li&gt;view단에서 시행
        &lt;ol&gt;
          &lt;li&gt;dispatch 활용&lt;/li&gt;
          &lt;li&gt;LoginRequiredmixin&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;html  활용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;my page에 내가 올린 사진들만 나오도록 구현한다.&lt;/li&gt;
  &lt;li&gt;my page에 팔로우 기능 추가하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이번-시간에-할-것12--14&quot;&gt;이번 시간에 할 것(12 ~ 14)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;좋아요 및 저장한 포스팅만 보기 기능 구현하기
    &lt;ul&gt;
      &lt;li&gt;좋아요 클릭한 포스팅만 볼 수 있도록 구현한다.&lt;/li&gt;
      &lt;li&gt;저장한 포스팅만 볼 수 있도록 구현한다.&lt;/li&gt;
      &lt;li&gt;새로운 템플릿을 만들지 않고 쿼리셋을 통해 구현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;좋아요-및-저장한-포스팅만-보기-구현하기&quot;&gt;좋아요 및 저장한 포스팅만 보기 구현하기&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;views.py 구현하기
    &lt;ol&gt;
      &lt;li&gt;클래스형 뷰를 상속받아 만들기&lt;/li&gt;
      &lt;li&gt;쿼리셋을 통해 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 했을 때만 가능하도록 하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결해주기&lt;/li&gt;
  &lt;li&gt;템플릿 수정해주기
    &lt;ol&gt;
      &lt;li&gt;base.html에 항목 추가해주기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;viewspy-구현해주기&quot;&gt;views.py 구현해주기&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1049&quot; alt=&quot;스크린샷 2019-05-06 오후 12 28 10&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207108-f0e1fb80-7005-11e9-8b44-78f16c8d04b8.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;photo_list.html을 가지고 온다.&lt;/li&gt;
  &lt;li&gt;dispatch를 통해 get 방식 및 post 방식 2가지를 처리하고&lt;/li&gt;
  &lt;li&gt;로그인이 안 되어 있으면 warning message를 부여
    &lt;ul&gt;
      &lt;li&gt;실제로는 base.html에서 html 분기를 통해 해결할 예정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이후 잘 실행되면 super을 통해 원래 PhotoLikeList를 실행&lt;/li&gt;
  &lt;li&gt;쿼리셋을 정의하고 요청한 유저의 좋아요한 포스터를 전부 리턴하도록 설계&lt;/li&gt;
  &lt;li&gt;Favorite 역시 like_list와 동일하게 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;url-연결해주기&quot;&gt;url 연결해주기&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1250&quot; alt=&quot;스크린샷 2019-05-06 오후 12 31 57&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207111-f6d7dc80-7005-11e9-9b58-6350ea35dd5e.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해당 views.py에 대한 url 2개 연결해주기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basehtml-카테고리-추가해주기&quot;&gt;base.html 카테고리 추가해주기&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1337&quot; alt=&quot;스크린샷 2019-05-06 오후 12 33 11&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207122-09eaac80-7006-11e9-8d6f-7ae1fc0d24cf.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;유저가 로그인이 되어 있다면&lt;/li&gt;
  &lt;li&gt;좋아요한 사진보기 및 저장한 사진 보기 추가 및 url 연결해주기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;확인&quot;&gt;확인&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1246&quot; alt=&quot;스크린샷 2019-05-06 오후 12 34 32&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207125-14a54180-7006-11e9-991e-7394040df77b.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위의 카테고리에 좋아요한 사진보기 및 저장한 사진보기가 추가된 것을 확인할 수 있다.&lt;/li&gt;
  &lt;li&gt;또한 각각 추가한 카테고리만 다시 리스트 형태로 보여지는 것을 알 수 있다.&lt;/li&gt;
  &lt;li&gt;추가적으로 따로 템플릿을 만들어서 url을 연결해주어도 된다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 05 May 2019 16:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/05/Django-15.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-%E1%84%8C%E1%85%A9%E1%87%82%E1%84%8B%E1%85%A1%E1%84%8B%E1%85%AD-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%8C%E1%85%A5%E1%84%8C%E1%85%A1%E1%86%BC%E1%84%92%E1%85%A1%E1%86%AB-%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B5%E1%86%BC-%E1%84%87%E1%85%A9%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/05/Django-15.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-%E1%84%8C%E1%85%A9%E1%87%82%E1%84%8B%E1%85%A1%E1%84%8B%E1%85%AD-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%8C%E1%85%A5%E1%84%8C%E1%85%A1%E1%86%BC%E1%84%92%E1%85%A1%E1%86%AB-%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B5%E1%86%BC-%E1%84%87%E1%85%A9%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 14. 인스타그램(11) - 좋아요 버튼 구현하기</title>
        <description>&lt;h3 id=&quot;20190505-인스타그램-클론-코딩하기좋아요-버튼-구현하기&quot;&gt;2019.05.05 인스타그램 클론 코딩하기(좋아요 버튼 구현하기)&lt;/h3&gt;

&lt;h1 id=&quot;인스타그램-만들기11&quot;&gt;인스타그램 만들기(11)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fabl1106/dstagramproject&quot;&gt;dstagram 소스코드 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-로직&quot;&gt;구현 로직&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo 앱 만들기&lt;/li&gt;
  &lt;li&gt;모델 설계하기&lt;/li&gt;
  &lt;li&gt;views 설계하기
    &lt;ol&gt;
      &lt;li&gt;list페이지&lt;/li&gt;
      &lt;li&gt;상세페이지&lt;/li&gt;
      &lt;li&gt;삭제하기&lt;/li&gt;
      &lt;li&gt;수정하기&lt;/li&gt;
      &lt;li&gt;생성페이지&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결시켜주기&lt;/li&gt;
  &lt;li&gt;template 만들기
    &lt;ol&gt;
      &lt;li&gt;create/list/update/delete/detail&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;사진 화면에 업로드 할 수 있도록 만들기&lt;/li&gt;
  &lt;li&gt;success url을 get_absolute_url로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ol&gt;
      &lt;li&gt;로그인/로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;템플릿에 로그인/로그아웃 보이도록 하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 sign out가 안 보이도록 구현하기(분기)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;권한 문제 해결하기
    &lt;ol&gt;
      &lt;li&gt;html 기준에서 해결하기&lt;/li&gt;
      &lt;li&gt;링크로 들어와도 안 되도록 해결해보기
        &lt;ol&gt;
          &lt;li&gt;view를 조정하기&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ol&gt;
      &lt;li&gt;댓글은 상세페이지에서 가능하도록 하기&lt;/li&gt;
      &lt;li&gt;소셜 댓글기능으로 구현하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요/저장하기 버튼 만들기
    &lt;ol&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면  색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한 정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;저장하기 기능 추가하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅만 보기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;저장한 포스팅 리스트 페이지 구현하기&lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅 및 저장한 포스팅 리스트 보기는 로그인한 사람만 보여주기
    &lt;ol&gt;
      &lt;li&gt;view단에서 시행
        &lt;ol&gt;
          &lt;li&gt;dispatch 활용&lt;/li&gt;
          &lt;li&gt;LoginRequiredmixin&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;html  활용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;my page에 내가 올린 사진들만 나오도록 구현한다.&lt;/li&gt;
  &lt;li&gt;my page에 팔로우 기능 추가하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이번-시간에-할-것11&quot;&gt;이번 시간에 할 것(11)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;좋아요 버튼 만들기
    &lt;ul&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면 색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한  정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;좋아요-및-저장하기-버튼-만들기&quot;&gt;좋아요 및 저장하기 버튼 만들기&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;like와 favorite 모델 구현하기&lt;/li&gt;
  &lt;li&gt;manytomanyField 사용하기&lt;/li&gt;
  &lt;li&gt;migration해주기 migrate해주기&lt;/li&gt;
  &lt;li&gt;views 연결해주기&lt;/li&gt;
  &lt;li&gt;url 연결해주기&lt;/li&gt;
  &lt;li&gt;template에 나오도록 구현해주기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;스프라이트-이미지-기법&quot;&gt;스프라이트 이미지 기법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;이미지는 한장인데 위치를 조절한다.&lt;/li&gt;
  &lt;li&gt;photo - static - images - instagram.png&lt;/li&gt;
  &lt;li&gt;스태틱 리소스를 띄우기 위해서
    &lt;ul&gt;
      &lt;li&gt;{ load static }&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1715&quot; alt=&quot;스크린샷 2019-05-05 오전 7 21 52&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206964-cf344480-7004-11e9-85bb-3553647e21a1.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;인스타그램 접속 및 좋아요 버튼 옆에서 검사 보기&lt;/li&gt;
  &lt;li&gt;해당이미지의 url을 확인하고 해당 url로 이동&lt;/li&gt;
  &lt;li&gt;이미지 확인 및 다른 이름으로 저장하여 로컬로 이동하기
    &lt;ol&gt;
      &lt;li&gt;photo아래에 static 디렉토리 생성&lt;/li&gt;
      &lt;li&gt;static 디렉토리 아래에 images 디렉토리 생성&lt;/li&gt;
      &lt;li&gt;그 아래에 원하는 이름으로 저장&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1006&quot; alt=&quot;스크린샷 2019-05-05 오전 7 23 54&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206973-d6f3e900-7004-11e9-9ffb-e07721fc2253.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;models에-like--savefavorite추가해주기&quot;&gt;models에 like / save(favorite)추가해주기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;결국 버튼을 클릭하면 어떤 업로드가 일어나야 하는데 그것을 구현하기 위해서는 클릭시 url을 연결해야 하고 그러기 위해서는 views가 필요하고 또 views가 움직이기 위해서는 models이 필요하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1177&quot; alt=&quot;스크린샷 2019-05-06 오후 12 27 03&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206979-e6733200-7004-11e9-9cef-b70427359ecc.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;like와 favorite 모델 구현하기&lt;/li&gt;
  &lt;li&gt;manytomanyField 사용하기&lt;/li&gt;
  &lt;li&gt;migration해주기 migrate해주기&lt;/li&gt;
  &lt;li&gt;views 연결해주기&lt;/li&gt;
  &lt;li&gt;url 연결해주기&lt;/li&gt;
  &lt;li&gt;template에 나오도록 구현해주기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;views-연결해주기&quot;&gt;views 연결해주기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;like view 구현하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;758&quot; alt=&quot;스크린샷 2019-05-06 오전 11 20 36&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206996-f854d500-7004-11e9-9675-0a2c89a615a9.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;get 방식으로 온다고 설정&lt;/li&gt;
  &lt;li&gt;로그인이 확인되지 않으면 자료를 숨겨라&lt;/li&gt;
  &lt;li&gt;photo_id를 확인&lt;/li&gt;
  &lt;li&gt;photo는 pk를 가지게 한다.&lt;/li&gt;
  &lt;li&gt;user가 이미 좋아요 한 사람 중에 있으면 클릭했을 때 지워지도록 하고&lt;/li&gt;
  &lt;li&gt;그렇지 않으면 더하게 해라&lt;/li&gt;
  &lt;li&gt;referer_url을 통해서 url을 parser 하여
    &lt;ul&gt;
      &lt;li&gt;만약에 메인 페이지에서 좋아요를 누르면 그 메인페이지에 있도록 하고&lt;/li&gt;
      &lt;li&gt;상세페이지에서 좋아요를 누르면 그 상세페에지로 redirect한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;저장하기(favorite)구현하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;826&quot; alt=&quot;스크린샷 2019-05-06 오전 11 21 52&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206997-0145a680-7005-11e9-849a-053c1cea0388.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;like와 마찬가지로 get 형식으로 온다고 설정&lt;/li&gt;
  &lt;li&gt;로그인 되어 있지 않으면 숨겨서 보이지 않도록 한다.&lt;/li&gt;
  &lt;li&gt;위와 동일&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;url-연결해주기&quot;&gt;url 연결해주기&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1054&quot; alt=&quot;스크린샷 2019-05-06 오전 11 26 28&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207000-099de180-7005-11e9-9cc9-c6a92f0b7436.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;url 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;template-구성해주기&quot;&gt;template 구성해주기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;base.html을 통해 위의 저장된 static 불러오기 및 사진 위치 설정해주기&lt;/li&gt;
  &lt;li&gt;photo_list를 통해 해당 위치 구현해주기&lt;/li&gt;
  &lt;li&gt;photo_detail에 해당 위치를 구현해주기&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;basehtml&quot;&gt;base.html&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1577&quot; alt=&quot;스크린샷 2019-05-06 오전 11 46 50&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207005-17536700-7005-11e9-83e0-ec4844ada03f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;각 아이콘들의 위치를 정확히 찾는다.
    &lt;ul&gt;
      &lt;li&gt;좋아요 눌렀을 때 사용될 채워진 사랑표&lt;/li&gt;
      &lt;li&gt;좋아요 된 상태에서 한번 더 눌렀을 때 사용될 빈 사랑표(평소 때 사용)&lt;/li&gt;
      &lt;li&gt;저장하기 눌렀을 때 사용될 색깔 있는 저장표&lt;/li&gt;
      &lt;li&gt;저장하기 된 상태에서 한번 더 눌렀을 때 사용될 색깔 없는 저장표(평소에도 사용)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각각의 active에는 채워진 사랑표 및 색깔 있는 저장표를 사용한다.&lt;/li&gt;
  &lt;li&gt;text-indent는 list.html의 a태그 뒤에 적혀질 글자가 안 보이도록 설정해준다.&lt;/li&gt;
  &lt;li&gt;overflow hiddend을 통해 옆으로 밀어진 글자를 아예 숨기도록 한다.&lt;/li&gt;
  &lt;li&gt;위치는 네이버의 검사를 통해 style에서 backgroud-position을 옴겨가며 찾는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;photo_listhtml-구현하기&quot;&gt;photo_list.html 구현하기&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1668&quot; alt=&quot;스크린샷 2019-05-06 오전 11 57 05&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207010-233f2900-7005-11e9-9a45-511e0ca06cc7.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;url 링크를 연결시켜주고 만약에 좋아요한 유저가 있으면 아이콘 active를 시켜준다.&lt;/li&gt;
  &lt;li&gt;그리고 좋아요는 all.count를 활용하여 몇명이 좋아요 했는지 표시하도록 한다.&lt;/li&gt;
  &lt;li&gt;favorite 역시 favorite한 유저가 있으면 아이콘 active시켜준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;photo_detailhtml&quot;&gt;photo_detail.html&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1837&quot; alt=&quot;스크린샷 2019-05-06 오후 12 04 06&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207013-2b976400-7005-11e9-89ae-fb5685176df5.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;photo_detail에도 적절한 위치에 추가해준다.&lt;/li&gt;
  &lt;li&gt;views.py에서 주소 parse를 통해 분기시켜줬기 때문에 detail에서 좋아요나 저장하기를 눌러도 detail 페이지에서 머문다.&lt;/li&gt;
  &lt;li&gt;만약 저장하기가 눌리지 않는다면 화면 분할이 잘못 되었을 수 있다.&lt;/li&gt;
  &lt;li&gt;class sytle=’width: 30rem;’ 에서 정해놓은 width를 삭제함으로 문제를 해결할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-확인하기&quot;&gt;구현 확인하기&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1232&quot; alt=&quot;B22921F1-5E13-47BA-A1F5-A67390F2256A&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57207016-32be7200-7005-11e9-81dd-645a04917247.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;클릭을 이것저것 해보며 구현이 잘 된 것을 확인한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 05 May 2019 15:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/05/Django-14.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-%E1%84%8C%E1%85%A9%E1%87%82%E1%84%8B%E1%85%A1%E1%84%8B%E1%85%AD-%E1%84%87%E1%85%A5%E1%84%90%E1%85%B3%E1%86%AB-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/05/Django-14.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-%E1%84%8C%E1%85%A9%E1%87%82%E1%84%8B%E1%85%A1%E1%84%8B%E1%85%AD-%E1%84%87%E1%85%A5%E1%84%90%E1%85%B3%E1%86%AB-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 13. 인스타그램(9~10) - 권한 문제 및 댓글 구현하기</title>
        <description>&lt;h3 id=&quot;20190505-인스타그램-클론-코딩하기권한-문제-및-댓글-구현하기&quot;&gt;2019.05.05 인스타그램 클론 코딩하기(권한 문제 및 댓글 구현하기)&lt;/h3&gt;

&lt;h1 id=&quot;인스타그램-만들기910&quot;&gt;인스타그램 만들기(9~10)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fabl1106/dstagramproject&quot;&gt;dstagram 소스코드 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-로직&quot;&gt;구현 로직&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo 앱 만들기&lt;/li&gt;
  &lt;li&gt;모델 설계하기&lt;/li&gt;
  &lt;li&gt;views 설계하기
    &lt;ol&gt;
      &lt;li&gt;list페이지&lt;/li&gt;
      &lt;li&gt;상세페이지&lt;/li&gt;
      &lt;li&gt;삭제하기&lt;/li&gt;
      &lt;li&gt;수정하기&lt;/li&gt;
      &lt;li&gt;생성페이지&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결시켜주기&lt;/li&gt;
  &lt;li&gt;template 만들기
    &lt;ol&gt;
      &lt;li&gt;create/list/update/delete/detail&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;사진 화면에 업로드 할 수 있도록 만들기&lt;/li&gt;
  &lt;li&gt;success url을 get_absolute_url로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ol&gt;
      &lt;li&gt;로그인/로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;템플릿에 로그인/로그아웃 보이도록 하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 sign out가 안 보이도록 구현하기(분기)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;권한 문제 해결하기
    &lt;ol&gt;
      &lt;li&gt;html 기준에서 해결하기&lt;/li&gt;
      &lt;li&gt;링크로 들어와도 안 되도록 해결해보기
        &lt;ol&gt;
          &lt;li&gt;view를 조정하기&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ol&gt;
      &lt;li&gt;댓글은 상세페이지에서 가능하도록 하기&lt;/li&gt;
      &lt;li&gt;소셜 댓글기능으로 구현하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요 버튼 만들기
    &lt;ol&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면  색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한 정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅만 보기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;포스팅 저장하기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;저장한 포스팅 리스트 페이지 구현하기&lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅 및 저장한 포스팅 리스트 보기는 로그인한 사람만 보여주기
    &lt;ol&gt;
      &lt;li&gt;view단에서 시행
        &lt;ol&gt;
          &lt;li&gt;dispatch 활용&lt;/li&gt;
          &lt;li&gt;LoginRequiredmixin&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;html  활용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;my page에 내가 올린 사진들만 나오도록 구현한다.&lt;/li&gt;
  &lt;li&gt;my page에 팔로우 기능 추가하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이번-시간에-할-것9--10&quot;&gt;이번 시간에 할 것(9 ~ 10)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;권한 문제 해결하기 (다른 사람으로 로그인 했을 때 삭제 및 수정 못하도록 하기)
    &lt;ul&gt;
      &lt;li&gt;html기준&lt;/li&gt;
      &lt;li&gt;views 조정으로 해결하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ul&gt;
      &lt;li&gt;disqus를 활용한 댓글 구현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-권한문제-해결하기&quot;&gt;1. 권한문제 해결하기&lt;/h2&gt;

&lt;h3 id=&quot;listhtml에서-간단하게-분기로-해결하기&quot;&gt;list.html에서 간단하게 분기로 해결하기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;분기를 통해 간단하게 화면에서 나오지 않도록 만들기&lt;/li&gt;
  &lt;li&gt;단 사용자가 주소를 입력하여 접속하게 되면 문제 발생(views.py로 해결)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1202&quot; alt=&quot;스크린샷 2019-05-04 오후 9 21 14&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206876-1968f600-7004-11e9-8986-8faeb84d130d.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user와 작성자가 같으면 수정하기와 삭제하기를 보여주도록 설정&lt;/li&gt;
  &lt;li&gt;새로운 유저 생성 이후에 다시 로그인을 해보면&lt;/li&gt;
  &lt;li&gt;메인 페이지에 수정하기와 삭제하기가 없어진 것을 확인할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1113&quot; alt=&quot;스크린샷 2019-05-04 오후 9 22 25&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206886-2b4a9900-7004-11e9-9576-644b632c80ae.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;viewspy로-주소로-접속해도-안되도록-해결하기&quot;&gt;views.py로 주소로 접속해도 안되도록 해결하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;새로운 유저 생성이후 /delete/2 로 접속을 해보면 삭제가 가능하다.&lt;/li&gt;
  &lt;li&gt;실제적으로 권한을 부여해서 못하도록 막음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;viewspy-의-class-update-수정&quot;&gt;views.py 의 class update 수정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;def dispatch를 활용하여 get형태 및 post형태 2가지 모두 커버하기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1033&quot; alt=&quot;스크린샷 2019-05-04 오후 9 26 32&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206891-37365b00-7004-11e9-9ec1-58ba9701132d.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 접속하였을 때 get이냐, post이냐를 결정하고 분기를 자동으로 해줌&lt;/li&gt;
  &lt;li&gt;만약에 작성자와 요청자가 다르면 수정할 권한이 없다는 메시지를 주고 메인페이지로 이동&lt;/li&gt;
  &lt;li&gt;그렇지 않으면 super을 써줘서 원래 Updateview가 실행되도록 해주며 super을 쓰게 되면 실행시 absolute_url로 자동적으로 이동한다. (단 success url이 설정되어 있으면 우선시 된다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;viewspy의-class-delete-수정&quot;&gt;views.py의 class delete 수정&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;975&quot; alt=&quot;스크린샷 2019-05-04 오후 9 30 14&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206895-461d0d80-7004-11e9-8940-19031e9095cb.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전반적으로 Update와 유사하다.&lt;/li&gt;
  &lt;li&gt;HttpResponseRedirect를 써주기 위해서는 import 해줘야 한다.&lt;/li&gt;
  &lt;li&gt;messages 역시 쓰기 위해 import 해줘야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;메시지-실행을-위한-구문-넣기&quot;&gt;메시지 실행을 위한 구문 넣기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;base.html로 이동&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1114&quot; alt=&quot;스크린샷 2019-05-05 오전 6 48 20&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206900-51703900-7004-11e9-91d5-2fdf35709672.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;{if message}를 통해 만약에 message가 있으면 message를 띄우도록 구현&lt;/li&gt;
  &lt;li&gt;위치 : {block content}위에 위치하여 화면의 가장 위에 뜨도록 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;확인하기&quot;&gt;확인하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;새로운 유저 생성 이후 다시 delete/2로 접속&lt;/li&gt;
  &lt;li&gt;메인페이지에서 삭제할 권한이 없습니다 .확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;댓글-구현하기소셜-로그인-으로-구현하기&quot;&gt;댓글 구현하기(소셜 로그인 으로 구현하기)&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;disqus 접속&lt;/li&gt;
  &lt;li&gt;회원가입 이후 생성 페이지 접속&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1112&quot; alt=&quot;BD7284D8-16C8-4AE5-ABF9-5CC62C87C5E6&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206913-5f25be80-7004-11e9-93cf-15ce2ad265e6.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create site를 진행&lt;/li&gt;
  &lt;li&gt;Basic 단계 선택&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1019&quot; alt=&quot;70A5B5AD-5FE3-44CB-BDCF-125F7CA8B3AB&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206918-68af2680-7004-11e9-9601-60cfbc0ee8c6.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;해당하는 플랫폼이 없으므로 Universal Code 선택&lt;/li&gt;
  &lt;li&gt;아무것도 하지 않고 제일 마지막에 configure 선택&lt;/li&gt;
  &lt;li&gt;configure disqus에서도 complete setup선택&lt;/li&gt;
  &lt;li&gt;이후 본인이 설치한 네임 확인 (주소창 확인)
    &lt;ol&gt;
      &lt;li&gt;buinstagram.disqus.com  —&amp;gt; buinstagram 사용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;terminal에서 pip install django.disqus&lt;/li&gt;
  &lt;li&gt;setting의 installed app에서
    &lt;ol&gt;
      &lt;li&gt;disqus&lt;/li&gt;
      &lt;li&gt;django.contrib.sites 추가&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;이후 python manage.py migrate를 통해 적용 필수!&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;setting의 제일 아래 줄에 DISQUS_WEBSITE_SHORTNAME 추가&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1118&quot; alt=&quot;스크린샷 2019-05-05 오전 6 59 40&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206924-71076180-7004-11e9-82ef-70a7e0091b49.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;화면에-보이는-위치-설정해주기&quot;&gt;화면에 보이는 위치 설정해주기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;photo_detail.html로 이동&lt;/li&gt;
  &lt;li&gt;수정일 대신 { load disqus_tags }&lt;/li&gt;
  &lt;li&gt;보여질 위치에 { disqus_show_comments } 삽입&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1295&quot; alt=&quot;스크린샷 2019-05-05 오전 7 01 01&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206931-7bc1f680-7004-11e9-92af-ce38cf24c636.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;확인하기-1&quot;&gt;확인하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;댓글 달기를 클릭하면 detail페이지로 이동하고  아래에 댓글 기능 생긴 것 확인&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1575&quot; alt=&quot;스크린샷 2019-05-05 오전 7 10 48&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57206936-88464f00-7004-11e9-8892-799eb4c7f91c.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 05 May 2019 14:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/05/Django-13.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-%E1%84%80%E1%85%AF%E1%86%AB%E1%84%92%E1%85%A1%E1%86%AB-%E1%84%86%E1%85%AE%E1%86%AB%E1%84%8C%E1%85%A6-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%83%E1%85%A2%E1%86%BA%E1%84%80%E1%85%B3%E1%86%AF-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/05/Django-13.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-%E1%84%80%E1%85%AF%E1%86%AB%E1%84%92%E1%85%A1%E1%86%AB-%E1%84%86%E1%85%AE%E1%86%AB%E1%84%8C%E1%85%A6-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%83%E1%85%A2%E1%86%BA%E1%84%80%E1%85%B3%E1%86%AF-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>2019_05_04_TIL</title>
        <description>&lt;h3 id=&quot;20190504-til&quot;&gt;2019.05.04 TIL&lt;/h3&gt;

&lt;h1 id=&quot;to-do금토일월-할-것&quot;&gt;To do(금,토,일,월 할 것)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;인스타그램 선생님이 요청한 사항 할 수 있는데 까지 해보기&lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기 (금,토,일,월)
        &lt;ul&gt;
          &lt;li&gt;&lt;del&gt;BOOKMARK 다시 만들어보기&lt;/del&gt;&lt;/li&gt;
          &lt;li&gt;&lt;del&gt;BOOKMARK TIL 하기&lt;/del&gt;&lt;/li&gt;
          &lt;li&gt;&lt;del&gt;인스타그램 다시 만들기&lt;/del&gt;&lt;/li&gt;
          &lt;li&gt;인스타그램 TIL하기
            &lt;ul&gt;
              &lt;li&gt;진행 중 ㅠㅠ 생각보다 엄청 오래 걸린다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;유튜브 촬영 (월요일 오전 일찍 촬영)
        &lt;ul&gt;
          &lt;li&gt;BOOKMARK 만들기 프로젝트 영상 촬영&lt;/li&gt;
          &lt;li&gt;인스타그램 만들기 프로젝트 영상 촬영&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;개인 프로젝트 관리
        &lt;ul&gt;
          &lt;li&gt;깃헙 블로그에 프로젝트란에 2가지 채우기&lt;/li&gt;
          &lt;li&gt;월요일 진행&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서버 배포해보기
        &lt;ul&gt;
          &lt;li&gt;북마크 및 디스타그램 상용 서비스로 만들기(배포 및 운영하기)&lt;/li&gt;
          &lt;li&gt;월요일 진행&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기&lt;/li&gt;
      &lt;li&gt;자바스크립트 공부하기
        &lt;ul&gt;
          &lt;li&gt;13,14,15,16&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;SQL 공부하기
        &lt;ul&gt;
          &lt;li&gt;모두의 SQL&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;폼 2개 동시에 띄우게 해보기&lt;/li&gt;
      &lt;li&gt;회원가입 구현하기&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;운동하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;데일리 리포트 및 피드백 진행&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;독서&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;영어 1개 암기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;til&quot;&gt;TIL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;오늘은 bookmark와 인스타그램을 다시 해보면서 하나씩 TIL 해보고 있다.&lt;/li&gt;
  &lt;li&gt;생각보다 굉장히 많은 기능들을 구현했고, 그 기능들을 하나씩 돌아보면서 해보니깐 깨닫는게 훨씬 많다.&lt;/li&gt;
  &lt;li&gt;비록 시간은 오래 걸리지만 어떤 부분에서 어떤 것들을 고쳐서 해결했는지 하나씩 해보니 더 많은 것들이 남는다.&lt;/li&gt;
  &lt;li&gt;오늘 영화보고 싶었는데 아쉽다 ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;today-was&quot;&gt;Today was&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;07:00 기상&lt;/li&gt;
  &lt;li&gt;07:00 ~ 08:00 씻기 및 이동&lt;/li&gt;
  &lt;li&gt;08:00 ~ 10:00 이것 저것 트랜드 관련 공부&lt;/li&gt;
  &lt;li&gt;10:00 ~ 11:00 북마크 및 인스타그램 틀 잡기&lt;/li&gt;
  &lt;li&gt;11:00 ~ 13:00 북마크 제작 및 TIL&lt;/li&gt;
  &lt;li&gt;13:00 ~ 15:00 북마크 제작 및 TIL&lt;/li&gt;
  &lt;li&gt;15:00 ~ 16:00 깃에 프로젝트 추가하기 - 못하고 있음 ㅠㅠ&lt;/li&gt;
  &lt;li&gt;16:00 ~ 17:00 인스타그램 제작 및 TIL&lt;/li&gt;
  &lt;li&gt;17:00 ~ 18:00 수영장&lt;/li&gt;
  &lt;li&gt;18:00 ~ 18:30 저녁식사&lt;/li&gt;
  &lt;li&gt;18:30 ~ 21:00 인스타그램 제작 및 TIL&lt;/li&gt;
  &lt;li&gt;21:00 ~ 22:00 인스타그램 제작 및 TIL&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;22:30 ~ 23:30 씻기 및 잠자기 전에 독서하기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;오늘은 조금은 즉흥적으로 운동도 하고 수영장도 다녀왔다.&lt;/li&gt;
  &lt;li&gt;그래도 오늘은 많은 시간 공부에 투자를 했고 나는 또 일정부분 성장했다.&lt;/li&gt;
  &lt;li&gt;텐션이 떨어질 때 운동을 하고 오니 훨씬 나아졌다.&lt;/li&gt;
  &lt;li&gt;이제 대회가 얼마 남지 않아서 좀 더 수영 및 사이클, 런에 집중해서 훈련을 해야되겠다. 걱정이 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tomorrow-do&quot;&gt;Tomorrow do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;인스타그램 선생님이 요청한 사항 할 수 있는데 까지 해보기&lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기 (금,토,일,월)
        &lt;ul&gt;
          &lt;li&gt;BOOKMARK 다시 만들어보기&lt;/li&gt;
          &lt;li&gt;BOOKMARK TIL 하기&lt;/li&gt;
          &lt;li&gt;인스타그램 다시 만들기&lt;/li&gt;
          &lt;li&gt;인스타그램 TIL하기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서버 배포해보기
        &lt;ul&gt;
          &lt;li&gt;북마크 및 디스타그램 상용 서비스로 만들기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기&lt;/li&gt;
      &lt;li&gt;자바스크립트 공부하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;폼 2개 동시에 띄우게 해보기&lt;/li&gt;
      &lt;li&gt;회원가입 구현하기&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;운동하기&lt;/li&gt;
      &lt;li&gt;데일리 리포트 및 피드백 진행&lt;/li&gt;
      &lt;li&gt;독서&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;영어 1개 암기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 May 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/til/2019/05/04/TIL.html</link>
        <guid isPermaLink="true">http://localhost:4000/til/2019/05/04/TIL.html</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>Django 12. 인스타그램(7~8) - success_url 및 account 앱 구현하기</title>
        <description>&lt;h3 id=&quot;20190504-인스타그램-클론-코딩하기success_url-및-account-앱-구현하기&quot;&gt;2019.05.04 인스타그램 클론 코딩하기(success_url 및 account 앱 구현하기)&lt;/h3&gt;

&lt;h1 id=&quot;인스타그램-만들기78&quot;&gt;인스타그램 만들기(7~8)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fabl1106/dstagramproject&quot;&gt;dstagram 소스코드 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-로직&quot;&gt;구현 로직&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo 앱 만들기&lt;/li&gt;
  &lt;li&gt;모델 설계하기&lt;/li&gt;
  &lt;li&gt;views 설계하기
    &lt;ol&gt;
      &lt;li&gt;list페이지&lt;/li&gt;
      &lt;li&gt;상세페이지&lt;/li&gt;
      &lt;li&gt;삭제하기&lt;/li&gt;
      &lt;li&gt;수정하기&lt;/li&gt;
      &lt;li&gt;생성페이지&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결시켜주기&lt;/li&gt;
  &lt;li&gt;template 만들기
    &lt;ol&gt;
      &lt;li&gt;create/list/update/delete/detail&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;사진 화면에 업로드 할 수 있도록 만들기&lt;/li&gt;
  &lt;li&gt;success url을 get_absolute_url로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ol&gt;
      &lt;li&gt;로그인/로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;템플릿에 로그인/로그아웃 보이도록 하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 sign out가 안 보이도록 구현하기(분기)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;권한 문제 해결하기
    &lt;ol&gt;
      &lt;li&gt;html 기준에서 해결하기&lt;/li&gt;
      &lt;li&gt;링크로 들어와도 안 되도록 해결해보기
        &lt;ol&gt;
          &lt;li&gt;view를 조정하기&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ol&gt;
      &lt;li&gt;댓글은 상세페이지에서 가능하도록 하기&lt;/li&gt;
      &lt;li&gt;소셜 댓글기능으로 구현하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요 버튼 만들기
    &lt;ol&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면  색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한 정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅만 보기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;포스팅 저장하기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;저장한 포스팅 리스트 페이지 구현하기&lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅 및 저장한 포스팅 리스트 보기는 로그인한 사람만 보여주기
    &lt;ol&gt;
      &lt;li&gt;view단에서 시행
        &lt;ol&gt;
          &lt;li&gt;dispatch 활용&lt;/li&gt;
          &lt;li&gt;LoginRequiredmixin&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;html  활용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;my page에 내가 올린 사진들만 나오도록 구현한다.&lt;/li&gt;
  &lt;li&gt;my page에 팔로우 기능 추가하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이번-시간에-할-것7--8&quot;&gt;이번 시간에 할 것(7 ~ 8)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;success url을 get_absolute_url 로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ul&gt;
      &lt;li&gt;로그인/ 로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;템플릿에 로그인/ 로그아웃 보이도록 하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 로그아웃이 안 보이도록 구현하기 (분기)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-success-url을-get_absolute_url로-연동시켜보기&quot;&gt;1. success url을 get_absolute_url로 연동시켜보기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;models.py에 absolute url 입력해주기&lt;/li&gt;
  &lt;li&gt;상세페이지로 이동하도록 absolute_url 설정 (나중에 사용)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1028&quot; alt=&quot;스크린샷 2019-05-04 오후 8 22 36&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179535-e1ee3280-6eb9-11e9-922c-371953942ab5.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이후에 views에서 return super가 나오게 되면 자동적으로 absolute_url 이 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-account-앱-만들기&quot;&gt;2. account 앱 만들기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;python manage.py startapp accounts&lt;/li&gt;
  &lt;li&gt;setting.py에 install_app에 accounts 추가
    &lt;ol&gt;
      &lt;li&gt;추가해주지 않으면 템플릿 및 models을 찾을 수가 없다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;로그인-로그아웃-기능-만들기&quot;&gt;로그인, 로그아웃 기능 만들기&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;장고에서는 기본적으로 로그인, 로그아웃 기능을 지원&lt;/li&gt;
  &lt;li&gt;전체적인 그림
    &lt;ol&gt;
      &lt;li&gt;urls.py를 만들어서 loginview와 logoutview를 바로 login.html과 logout.html로 전달
        &lt;ol&gt;
          &lt;li&gt;templates에 login.html과 logout.html 구현&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;models.py와 views.py를 거치지 않고 바로 구현 가능&lt;/li&gt;
      &lt;li&gt;로그인 성공했을시 접속할 링크 구현&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;urls.py로 바로 url 연결시켜주기&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2차-urlspy-구현하기&quot;&gt;2차 urls.py 구현하기&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1144&quot; alt=&quot;스크린샷 2019-05-04 오후 8 56 30&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179541-f5999900-6eb9-11e9-95fc-9ebe33bd4819.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;장고에서 지원하는 loginview와 logoutview를 활용하여 바로 login.html과 logout.html로 연결시켜줌&lt;/li&gt;
  &lt;li&gt;1차 url 연결
    &lt;ul&gt;
      &lt;li&gt;메인 urls.py에 path(‘accounts/’, include(‘accounts.urls’)) 추가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;템플릿-구현하기&quot;&gt;템플릿 구현하기&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;login.html&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1335&quot; alt=&quot;스크린샷 2019-05-04 오후 8 58 21&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179546-fc281080-6eb9-11e9-85c3-66d0f4bc9ba7.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;logout.html&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1452&quot; alt=&quot;스크린샷 2019-05-04 오후 8 58 50&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179553-034f1e80-6eba-11e9-9f43-be35150e6a9d.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 성공 이후에 아래에 로그인 다시 할 수 있도록 링크 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;로그인-성공했을-시-접속할-링크-구현해주기&quot;&gt;로그인 성공했을 시 접속할 링크 구현해주기&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;setting.py에 추가&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-pyhon&quot;&gt;LOGIN_REDIRECT_URL ='/' 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;확인하기&quot;&gt;확인하기&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;runserver하여 /accounts/login 및 /accounts/logout 들어가보기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;템플릿에-로그인--로그아웃-보이도록-하기&quot;&gt;템플릿에 로그인 / 로그아웃 보이도록 하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;base.html의 navbar를 추가하여 로그인 / 로그아웃 구현&lt;/li&gt;
  &lt;li&gt;url 링크 연동&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1422&quot; alt=&quot;스크린샷 2019-05-04 오후 9 04 39&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179555-08ac6900-6eba-11e9-853a-df9369f7536b.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;로그인-했을-때만-사진-업로드-및-logout-보이게-하기-분기&quot;&gt;로그인 했을 때만 사진 업로드 및 logout 보이게 하기 (분기)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;{ if user.is_authenticated }&lt;/li&gt;
  &lt;li&gt;{ else }&lt;/li&gt;
  &lt;li&gt;{ endif }&lt;/li&gt;
  &lt;li&gt;활용 하여 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1321&quot; alt=&quot;스크린샷 2019-05-04 오후 9 09 22&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179565-16fa8500-6eba-11e9-8c1f-b106192e572a.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인이 되어 있다면 사진 올리기와 logout 을 보여주고&lt;/li&gt;
  &lt;li&gt;그렇지 않다면 login을 보여줘라&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 May 2019 14:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-12.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-success_url-%E1%84%86%E1%85%B5%E1%86%BE-account-%E1%84%8B%E1%85%A2%E1%86%B8-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-12.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-success_url-%E1%84%86%E1%85%B5%E1%86%BE-account-%E1%84%8B%E1%85%A2%E1%86%B8-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 08. Bookmark 개별 템플릿 만들기 및 링크연결</title>
        <description>&lt;h3 id=&quot;20190504-북마크-프로젝트의-개별-상세페이지를-만들고-링크를-연동하여-연결시켜-줍니다&quot;&gt;2019.05.04 북마크 프로젝트의 개별 상세페이지를 만들고 링크를 연동하여 연결시켜 줍니다.&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;개별 템플릿 꾸미기&lt;/li&gt;
  &lt;li&gt;base.html과 연동시켜주기&lt;/li&gt;
  &lt;li&gt;링크를 연결하여 페이지 이동시키기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;개별-템플릿-만들기&quot;&gt;개별 템플릿 만들기&lt;/h1&gt;

&lt;h2 id=&quot;bookmark-템플릿-수정하기&quot;&gt;bookmark 템플릿 수정하기&lt;/h2&gt;

&lt;h3 id=&quot;bookmark-list&quot;&gt;bookmark list&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1017&quot; alt=&quot;스크린샷 2019-05-04 오후 1 31 39&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174130-69b14e00-6e74-11e9-9fd7-b0bc40fed86f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;block content 구성&lt;/li&gt;
  &lt;li&gt;models 을 통해 생성된 object의 list들을 돌면서 한 줄씩 가지고 온다.
    &lt;ul&gt;
      &lt;li&gt;해당 object의 id/ site_name/ url 나열&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각각의 링크 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_create&quot;&gt;bookmark_create&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;769&quot; alt=&quot;스크린샷 2019-05-04 오후 1 36 08&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174131-6b7b1180-6e74-11e9-9f56-c48aa384de5f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form을 활용하여 입력창 생성&lt;/li&gt;
  &lt;li&gt;post형식으로 전송&lt;/li&gt;
  &lt;li&gt;{ csrf_token }을 작성하여 보안문제 해결&lt;/li&gt;
  &lt;li&gt;를 적어줌으로서 한줄씩 띄우면서 create의 field에 등록된 것을 가지고 옴&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_detail&quot;&gt;bookmark_detail&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1243&quot; alt=&quot;D2667FDE-3F5D-4A6F-8B80-7B1587ABCA8A&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174133-6ddd6b80-6e74-11e9-91f2-17b3c0f608f1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해당 컨텐츠의 이름/ url / content를 보여준다.&lt;/li&gt;
  &lt;li&gt;수정과 삭제를 할 수 있도록 링크 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_delete&quot;&gt;bookmark_delete&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;796&quot; alt=&quot;F11BCB62-DAD1-474D-8EC6-72B10C33BD98&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174134-6f0e9880-6e74-11e9-8bea-2f1d5d7bc24f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form 형식으로 구현&lt;/li&gt;
  &lt;li&gt;한번 더 실제로 지울지를 확인하는 페이지로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_update&quot;&gt;bookmark_update&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;759&quot; alt=&quot;81B685AD-43C9-470D-AA9B-502CB6D026A9&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174136-70d85c00-6e74-11e9-9828-e37f98133bbb.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create와 비슷하게 구현&lt;/li&gt;
  &lt;li&gt;폼 형태로 입력할 수 있도록 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;실제-실행-및-실제-페이지-확인&quot;&gt;실제 실행 및 실제 페이지 확인&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;python manage.py runserver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1254&quot; alt=&quot;스크린샷 2019-05-04 오후 2 30 54&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174398-3f15c400-6e79-11e9-8fc8-11c4874754a2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;1234&quot; alt=&quot;스크린샷 2019-05-04 오후 2 20 46&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174392-1e4d6e80-6e79-11e9-8923-90a675568879.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 04 May 2019 14:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-08.-Bookmark-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A7%E1%86%AF-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%85%E1%85%B5%E1%86%BC%E1%84%8F%E1%85%B3%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%80%E1%85%A7%E1%86%AF.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-08.-Bookmark-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A7%E1%86%AF-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%85%E1%85%B5%E1%86%BC%E1%84%8F%E1%85%B3%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%80%E1%85%A7%E1%86%AF.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 11. 인스타그램(5~6) - template설계 및 사진업로드하기</title>
        <description>&lt;h3 id=&quot;20190504-인스타그램-클론-코딩하기template-및-url-연결하기&quot;&gt;2019.05.04 인스타그램 클론 코딩하기(Template 및 url 연결하기)&lt;/h3&gt;

&lt;h1 id=&quot;인스타그램-만들기56&quot;&gt;인스타그램 만들기(5~6)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fabl1106/dstagramproject&quot;&gt;dstagram 소스코드 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-로직&quot;&gt;구현 로직&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo 앱 만들기&lt;/li&gt;
  &lt;li&gt;모델 설계하기&lt;/li&gt;
  &lt;li&gt;views 설계하기
    &lt;ol&gt;
      &lt;li&gt;list페이지&lt;/li&gt;
      &lt;li&gt;상세페이지&lt;/li&gt;
      &lt;li&gt;삭제하기&lt;/li&gt;
      &lt;li&gt;수정하기&lt;/li&gt;
      &lt;li&gt;생성페이지&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결시켜주기&lt;/li&gt;
  &lt;li&gt;template 만들기
    &lt;ol&gt;
      &lt;li&gt;create/list/update/delete/detail&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;사진 화면에 업로드 할 수 있도록 만들기&lt;/li&gt;
  &lt;li&gt;success url을 get_absolute_url로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ol&gt;
      &lt;li&gt;로그인/로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 sign out가 안 보이도록 구현하기(분기)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;권한 문제 해결하기
    &lt;ol&gt;
      &lt;li&gt;html 기준에서 해결하기&lt;/li&gt;
      &lt;li&gt;링크로 들어와도 안 되도록 해결해보기
        &lt;ol&gt;
          &lt;li&gt;view를 조정하기&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ol&gt;
      &lt;li&gt;댓글은 상세페이지에서 가능하도록 하기&lt;/li&gt;
      &lt;li&gt;소셜 댓글기능으로 구현하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요 버튼 만들기
    &lt;ol&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면  색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한 정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅만 보기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;포스팅 저장하기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;저장한 포스팅 리스트 페이지 구현하기&lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅 및 저장한 포스팅 리스트 보기는 로그인한 사람만 보여주기
    &lt;ol&gt;
      &lt;li&gt;view단에서 시행
        &lt;ol&gt;
          &lt;li&gt;dispatch 활용&lt;/li&gt;
          &lt;li&gt;LoginRequiredmixin&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;html  활용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;my page에 내가 올린 사진들만 나오도록 구현한다.&lt;/li&gt;
  &lt;li&gt;my page에 팔로우 기능 추가하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이번-시간에-할-것56&quot;&gt;이번 시간에 할 것(5~6)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Template 만들기&lt;/li&gt;
  &lt;li&gt;사진이 화면에 업로드 할 수 있도록 만들기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;template-만들기&quot;&gt;Template 만들기&lt;/h1&gt;

&lt;h2 id=&quot;1-템플릿-만들기&quot;&gt;1. 템플릿 만들기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;photo 아래에 templates 폴더 만들기&lt;/li&gt;
  &lt;li&gt;templates 아래에 photo 폴더 만들기&lt;/li&gt;
  &lt;li&gt;그 아래에 html 파일들 생성해주기&lt;/li&gt;
  &lt;li&gt;이후 많은 앱들이 생기는 경우 서로 겹치는 문제를 해결하기 위해 templates 아래에 photo폴더를 다시 만들고 html파일 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1218&quot; alt=&quot;스크린샷 2019-05-04 오후 7 33 01&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179425-d2221e80-6eb8-11e9-830b-e5367904527b.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-basehtml에-연결하기&quot;&gt;2. base.html에 연결하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;photo 아래에 layout 만들고 base.html 생성해주기&lt;/li&gt;
  &lt;li&gt;layout 경로를 찾을 수 있도록 setting에 templates 경로를 지정&lt;/li&gt;
  &lt;li&gt;os.path.join(BASE_DIR, ‘layout’)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-bootstrap-적용하기&quot;&gt;3. Bootstrap 적용하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;부트스트랩을 적용하면 누구나 손쉽게 웹사이트 디자인을 할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap · The most popular HTML, CSS, and JS library in the world.&lt;/a&gt; 에 접속합니다.&lt;/li&gt;
  &lt;li&gt;base.html 파일에 부트스트랩을 사용하기 위해 필요한 css 및 javascript 링크를 넣습니다.
    &lt;ol&gt;
      &lt;li&gt;css 파일은 head의 마지막에 위치&lt;/li&gt;
      &lt;li&gt;javascript 파일은 body의 마지막에 위치&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#css &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;#javascript&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;부트스트랩에서 마음에 드는 navbar를 가지고 옵니다.
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/4.3/components/navbar/&quot;&gt;Navbar · Bootstrap&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1240&quot; alt=&quot;3883FDD8-5749-4824-889D-B25018DD207D&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179428-d8b09600-6eb8-11e9-98d8-e62a623152d9.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;마음에 드는 포맷을 찾으면 해당 포맷을 적용할 html에 넣어줍니다.
    &lt;ol&gt;
      &lt;li&gt;지금은  base.html에 넣어줍니다.(body tag내 위치)&lt;/li&gt;
      &lt;li&gt;파일들을 적절하게 수정하고 클릭시 연결할 링크를 연결해줍니다.
        &lt;ol&gt;
          &lt;li&gt;&amp;lt;a href = “ “ &amp;gt; 내 위치&lt;/li&gt;
          &lt;li&gt;{  url ‘bookmark:index’ } 등과 같이 연결&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;block content를 만들어서 다른 템플릿에서 추가할 수 있도록 구성합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1226&quot; alt=&quot;스크린샷 2019-05-04 오후 7 42 11&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179434-e6feb200-6eb8-11e9-876e-d002dc1dfe62.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;상단 링크 구성을 Home과  사진올리기로 구성&lt;/li&gt;
  &lt;li&gt;아래쪽에 { block content } { endblock } 을 구성&lt;/li&gt;
  &lt;li&gt;Dstagram 제목 설정 및 Home, 사진 올리기 url 연결하기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;photo-템플릿-수정하기&quot;&gt;photo 템플릿 수정하기&lt;/h2&gt;

&lt;h3 id=&quot;photo_list&quot;&gt;photo_list&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1133&quot; alt=&quot;스크린샷 2019-05-04 오후 7 48 46&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179439-f251dd80-6eb8-11e9-88c3-6596cfb0765c.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;for문으로 models를 통해 생성된 object의 list를 하나씩 가지고 온다.&lt;/li&gt;
  &lt;li&gt;img의 경로는 image.url 을 통해 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;photo_create&quot;&gt;photo_create&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;882&quot; alt=&quot;스크린샷 2019-05-04 오후 7 56 03&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179444-03025380-6eb9-11e9-9e93-0a90d77f79e0.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form을 활용하여 입력창 생성&lt;/li&gt;
  &lt;li&gt;post형식으로 전송&lt;/li&gt;
  &lt;li&gt;{ csrf_token }을 작성하여 보안문제 해결&lt;/li&gt;
  &lt;li&gt;를 적어줌으로서 한줄씩 띄우면서 create의 field에 등록된 것을 가지고 옴&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;photo_detail&quot;&gt;photo_detail&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;1118&quot; alt=&quot;스크린샷 2019-05-04 오후 7 59 33&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179445-05fd4400-6eb9-11e9-839a-3579bc27640c.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해당 컨텐츠의 작성자 / text를 보여준다.&lt;/li&gt;
  &lt;li&gt;수정과 삭제를 할 수 있도록 링크 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;photo_delete&quot;&gt;photo_delete&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;774&quot; alt=&quot;스크린샷 2019-05-04 오후 8 01 42&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179449-0eee1580-6eb9-11e9-95b8-97de4b783284.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form 형식으로 구현&lt;/li&gt;
  &lt;li&gt;한번 더 실제로 지울지를 확인하는 페이지로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;photo_update&quot;&gt;photo_update&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;769&quot; alt=&quot;스크린샷 2019-05-04 오후 8 02 32&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179490-58d6fb80-6eb9-11e9-8d63-816db5478ad5.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create와 비슷하게 구현&lt;/li&gt;
  &lt;li&gt;폼 형태로 입력할 수 있도록 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-화면에-사진-업로드-할-수-있도록-만들기&quot;&gt;2. 화면에 사진 업로드 할 수 있도록 만들기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;현재는 사진을 업로드 하려고 하면 선택된 파일이 없다고 나옴&lt;/li&gt;
  &lt;li&gt;메인 화면에 사진이 오류가 뜸&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;해결방안&quot;&gt;해결방안&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;html의 폼형태에서 입력할 때는 모두 text 파일로 인지 따라서 form 옆에 이게 image 파일이라는 것을 알려줄 수 있도록 해야함&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1250&quot; alt=&quot;스크린샷 2019-05-04 오후 8 05 12&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179462-32b15b80-6eb9-11e9-8ddc-38318d87bf9c.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;enctype을 추가하여 데이터형식을 입력한다고 알려줌&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;또한 photo을 생성하는데 user_id가 확인되어야 하므로 views.py 수정&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;796&quot; alt=&quot;스크린샷 2019-05-04 오후 8 13 38&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179501-802dc880-6eb9-11e9-92cf-93bfd663cd42.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;입력받는 폼이 유효한지 확인하고 작성자 id 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;메인 화면에 사진이 오류가 뜸
    &lt;ol&gt;
      &lt;li&gt;이미지 url을 확실하게 설정해줘야 한다.&lt;/li&gt;
      &lt;li&gt;urls.py 수정&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1111&quot; alt=&quot;스크린샷 2019-05-04 오후 8 15 19&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179511-99cf1000-6eb9-11e9-82ec-fe35660278d5.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미지의 url 설정&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 May 2019 13:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-11.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-template%E1%84%89%E1%85%A5%E1%86%AF%E1%84%80%E1%85%A8-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%89%E1%85%A1%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%8B%E1%85%A5%E1%86%B8%E1%84%85%E1%85%A9%E1%84%83%E1%85%B3%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-11.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-template%E1%84%89%E1%85%A5%E1%86%AF%E1%84%80%E1%85%A8-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%89%E1%85%A1%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%8B%E1%85%A5%E1%86%B8%E1%84%85%E1%85%A9%E1%84%83%E1%85%B3%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 07. Bookmark 템플릿 만들기 및 base.html에 연동시키기</title>
        <description>&lt;h3 id=&quot;20190504-북마크-프로젝트의-템플릿-만들기-및-basehtml에-연동시키기&quot;&gt;2019.05.04 북마크 프로젝트의 템플릿 만들기 및 base.html에 연동시키기&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;템플릿 만들기&lt;/li&gt;
  &lt;li&gt;base.html에 연결하기&lt;/li&gt;
  &lt;li&gt;템플릿 꾸미기
    &lt;ul&gt;
      &lt;li&gt;부트스트랩 활용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;템플릿-만들기&quot;&gt;템플릿 만들기&lt;/h1&gt;

&lt;h2 id=&quot;1-템플릿-만들기&quot;&gt;1. 템플릿 만들기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;bookmark 아래에 templates 폴더 만들기&lt;/li&gt;
  &lt;li&gt;templates 아래에 bookmark 폴더 만들기&lt;/li&gt;
  &lt;li&gt;그 아래에 html 파일들 생성해주기&lt;/li&gt;
  &lt;li&gt;이후 많은 앱들이 생기는 경우 서로 겹치는 문제를 해결하기 위해 templates 아래에 bookmark폴더를 다시 만들고 html파일 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1035&quot; alt=&quot;590CF98A-B512-47DE-B9F0-593788F31DD2&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174125-60c07c80-6e74-11e9-9253-ecfd632abb34.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-basehtml에-연결하기&quot;&gt;2. base.html에 연결하기&lt;/h2&gt;

&lt;h3 id=&quot;템플릿-분리형-확장&quot;&gt;템플릿 분리형 확장&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;매번 있어야하는 내용을 지속적으로 넣어주기가 귀찮음&lt;/li&gt;
  &lt;li&gt;앱 별로는 각각의 템플릿에 필요하나 전체 앱에 있어야하는 것은 전체 루트위로 뺀다.&lt;/li&gt;
  &lt;li&gt;전체 프로젝트 아래에 layout을 만들고 아래에 base.html을 만든다.&lt;/li&gt;
  &lt;li&gt;내가 원하는 부분부분 나누어 놓는다.(by block)
    &lt;ul&gt;
      &lt;li&gt;bookmark 템플릿들은 base.html을 확장받아 사용한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;settings templates
    &lt;ul&gt;
      &lt;li&gt;base.html을 찾을 수 있도록 경로를 지정해준다.&lt;/li&gt;
      &lt;li&gt;DIR에 추가적으로 등록해놓는다. (directorys)
        &lt;ul&gt;
          &lt;li&gt;os.path.join(베이스디렉토리의 layout 폴더를 등록해놓는다.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;base.html을 부트스트랩을 디자인 할 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1338&quot; alt=&quot;3797052E-BBF5-4F7F-9D27-C5ED880B0FDD&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174126-64ec9a00-6e74-11e9-84cd-b960072e093a.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;layout 디렉토리를 만들고 그 아래에 base.html을 만듭니다.&lt;/li&gt;
  &lt;li&gt;layout 경로를 찾을 수 있도록 setting에 templates 경로를 지정해줍니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-bootstrap-적용하기&quot;&gt;3. Bootstrap 적용하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;부트스트랩을 적용하면 누구나 손쉽게 웹사이트 디자인을 할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap · The most popular HTML, CSS, and JS library in the world.&lt;/a&gt; 에 접속합니다.&lt;/li&gt;
  &lt;li&gt;base.html 파일에 부트스트랩을 사용하기 위해 필요한 css 및 javascript 링크를 넣습니다.
    &lt;ol&gt;
      &lt;li&gt;css 파일은 head의 마지막에 위치&lt;/li&gt;
      &lt;li&gt;javascript 파일은 body의 마지막에 위치&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#css &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;#javascript&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;부트스트랩에서 마음에 드는 navbar를 가지고 옵니다.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/4.3/components/navbar/&quot;&gt;Navbar · Bootstrap&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1240&quot; alt=&quot;950BEEB6-C57F-42DD-A23D-BAEB19DA1A8F&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174127-66b65d80-6e74-11e9-932a-32dd1b00b0c9.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;마음에 드는 포맷을 찾으면 해당 포맷을 적용할 html에 넣어줍니다.
    &lt;ol&gt;
      &lt;li&gt;지금은  base.html에 넣어줍니다.(body tag내 위치)&lt;/li&gt;
      &lt;li&gt;파일들을 적절하게 수정하고 클릭시 연결할 링크를 연결해줍니다.
        &lt;ol&gt;
          &lt;li&gt;&amp;lt;a href = “ “ &amp;gt; 내 위치&lt;/li&gt;
          &lt;li&gt;url ‘bookmark:index’ 등과 같이 연결&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;block content를 만들어서 다른 템플릿에서 추가할 수 있도록 구성합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1244&quot; alt=&quot;21BCAAC7-3E89-48CC-87D2-F7510382814D&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174128-68802100-6e74-11e9-9f2a-91dda319b098.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;상단 링크 구성을 Home과  북마크 생성하기로 구성&lt;/li&gt;
  &lt;li&gt;아래쪽에 { block content } { endblock } 을 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다음-시간에는-상세-페이지들을-하나씩-구성해보겠습니다&quot;&gt;다음 시간에는 상세 페이지들을 하나씩 구성해보겠습니다.&lt;/h2&gt;
</description>
        <pubDate>Sat, 04 May 2019 13:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-07.-Bookmark-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-base.html%E1%84%8B%E1%85%A6-%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%B5%E1%84%8F%E1%85%B5%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-07.-Bookmark-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-base.html%E1%84%8B%E1%85%A6-%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%B5%E1%84%8F%E1%85%B5%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 10. 인스타그램(3~4) - views설계 및 url연결</title>
        <description>&lt;h3 id=&quot;20190504-인스타그램-클론-코딩하기views-및-url-연결하기&quot;&gt;2019.05.04 인스타그램 클론 코딩하기(views 및 url 연결하기)&lt;/h3&gt;

&lt;h1 id=&quot;인스타그램-만들기34&quot;&gt;인스타그램 만들기(3~4)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fabl1106/dstagramproject&quot;&gt;dstagram 소스코드 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현-로직&quot;&gt;구현 로직&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo 앱 만들기&lt;/li&gt;
  &lt;li&gt;모델 설계하기&lt;/li&gt;
  &lt;li&gt;views 설계하기
    &lt;ol&gt;
      &lt;li&gt;list페이지&lt;/li&gt;
      &lt;li&gt;상세페이지&lt;/li&gt;
      &lt;li&gt;삭제하기&lt;/li&gt;
      &lt;li&gt;수정하기&lt;/li&gt;
      &lt;li&gt;생성페이지&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;url 연결시켜주기&lt;/li&gt;
  &lt;li&gt;template 만들기
    &lt;ol&gt;
      &lt;li&gt;create/list/update/delete/detail&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;사진 업로드 할 수 있도록 만들기&lt;/li&gt;
  &lt;li&gt;success url을 get_absolute_url로 연동시켜보기&lt;/li&gt;
  &lt;li&gt;account 앱 만들기
    &lt;ol&gt;
      &lt;li&gt;로그인/로그아웃 기능 구현하기&lt;/li&gt;
      &lt;li&gt;로그아웃 되었을 때는 create 및 sign out가 안 보이도록 구현하기(분기)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;권한 문제 해결하기
    &lt;ol&gt;
      &lt;li&gt;html 기준에서 해결하기&lt;/li&gt;
      &lt;li&gt;링크로 들어와도 안 되도록 해결해보기
        &lt;ol&gt;
          &lt;li&gt;view를 조정하기&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;댓글 기능 구현하기
    &lt;ol&gt;
      &lt;li&gt;댓글은 상세페이지에서 가능하도록 하기&lt;/li&gt;
      &lt;li&gt;소셜 댓글기능으로 구현하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요 버튼 만들기
    &lt;ol&gt;
      &lt;li&gt;스프라이트 이미지 기법 활용하기&lt;/li&gt;
      &lt;li&gt;클릭하면  색깔 바뀌도록 구현하기&lt;/li&gt;
      &lt;li&gt;로그인을 해야지 버튼 클릭이 되도록 하고 클릭을 하면 like count 올라가기&lt;/li&gt;
      &lt;li&gt;like에 대한 정보를 저장하기&lt;/li&gt;
      &lt;li&gt;좋아요 counting 표시해주기&lt;/li&gt;
      &lt;li&gt;디테일 페이지에서 좋아요를 누르면 디테일 페이지에서 그대로 유지하도록 하기
        &lt;ol&gt;
          &lt;li&gt;view와 like에서의 분기&lt;/li&gt;
          &lt;li&gt;레퍼러를 활용하여 해당 주소가 어디서부터 시작됬는지 확인한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅만 보기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;포스팅 저장하기 기능 구현하기&lt;/li&gt;
  &lt;li&gt;저장한 포스팅 리스트 페이지 구현하기&lt;/li&gt;
  &lt;li&gt;좋아요한 포스팅 및 저장한 포스팅 리스트 보기는 로그인한 사람만 보여주기
    &lt;ol&gt;
      &lt;li&gt;view단에서 시행
        &lt;ol&gt;
          &lt;li&gt;dispatch 활용&lt;/li&gt;
          &lt;li&gt;LoginRequiredmixin&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;html  활용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;my page에 내가 올린 사진들만 나오도록 구현한다.&lt;/li&gt;
  &lt;li&gt;my page에 팔로우 기능 추가하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이번-시간에-할-것34&quot;&gt;이번 시간에 할 것(3~4)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;views 설계하기&lt;/li&gt;
  &lt;li&gt;URL 연결하기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;views-설계하기&quot;&gt;views 설계하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;class형 뷰의 generic view를 이용하여 구현&lt;/li&gt;
  &lt;li&gt;ListView/CreateView/UpdateView/DeleteView/DetailView 구현&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1197&quot; alt=&quot;스크린샷 2019-05-04 오후 5 01 13&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179383-57f19a00-6eb8-11e9-957e-96a7d5067761.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Listview, Createview, deleteview,detailview,updateview  임포트 해오기&lt;/li&gt;
  &lt;li&gt;PhotoList:
    &lt;ol&gt;
      &lt;li&gt;가장 메인에서 보여줄 로직&lt;/li&gt;
      &lt;li&gt;북마크 모델을 불러와서 데이터를 활용할 것이라고 기제&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;PhotoCreate:
    &lt;ol&gt;
      &lt;li&gt;북마크 모델을 활용하는데&lt;/li&gt;
      &lt;li&gt;생성할 때 채워야 할 필드 확인&lt;/li&gt;
      &lt;li&gt;이후 연결될 템플릿 이름은 bookmark_create 일 것이다.&lt;/li&gt;
      &lt;li&gt;성공하면 메인 페이지로 돌아가도록 연결(이후 url로 연결)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;PhotoUpdate:
    &lt;ol&gt;
      &lt;li&gt;Create와 마찬가지로 field가 꼭 필요하다&lt;/li&gt;
      &lt;li&gt;대부분 Create와 동일&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;PhotoDelete와 PhotoDetail
    &lt;ol&gt;
      &lt;li&gt;삭제와 상세페이지는 특별한 로직이 필요하지 않음&lt;/li&gt;
      &lt;li&gt;템플릿과 연결을 잘 시킬 수 있도록 신경&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;url-연결하기&quot;&gt;URL 연결하기&lt;/h1&gt;

&lt;h2 id=&quot;2차-url-연결하기&quot;&gt;2차 URL 연결하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;photo의 urls.py 생성&lt;/li&gt;
  &lt;li&gt;URL 작성하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1251&quot; alt=&quot;스크린샷 2019-05-04 오후 5 05 57&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179391-6b9d0080-6eb8-11e9-9ae2-b563d14db35e.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;app_name 설정을 통해 namespace(이름공간)확보
    &lt;ol&gt;
      &lt;li&gt;다른 앱들과 url pattern 이름이 겹치는 것을 방지하기 위해 사용한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;path(url pattern, view, url pattern name),
    &lt;ul&gt;
      &lt;li&gt;함수형 뷰는 이름만 적으면 되고 클래스형 뷰는 이름.as_view()&lt;/li&gt;
      &lt;li&gt;name은 나중에 불러쓰기 위해 지정한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;url pattern
    &lt;ol&gt;
      &lt;li&gt;&amp;lt;int:pk&amp;gt;
        &lt;ol&gt;
          &lt;li&gt;해당 작성에 대한 번호로 이동해야지 상세페이지 및 그 글에 대한 삭제, 수정을 할 수 있다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;views 경로 지정
    &lt;ol&gt;
      &lt;li&gt;해당 url이 들어오면 views의 해당 view의 로직을 따라서 처리한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;name
    &lt;ol&gt;
      &lt;li&gt;네임 설정을 통해 이후 클릭하면 해당 url로 이동하도록 설정한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1차-url-연결하기&quot;&gt;1차 URL 연결하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;config의 url.py에 작성&lt;/li&gt;
  &lt;li&gt;2차 URL을 설정한 이후에 가장 기본이 되는 URL과 연결시켜준다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;897&quot; alt=&quot;스크린샷 2019-05-04 오후 5 08 45&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57179392-75266880-6eb8-11e9-9a9f-399b5e520ea7.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;기본적으로 admin 주소는 설정되어 있다.&lt;/li&gt;
  &lt;li&gt;include를 통해서 해당 주소로 연결시켜준다.
    &lt;ol&gt;
      &lt;li&gt;가장 기본 주소가 들어오면 photo의 url로 연결시켜줘라.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이까지-하면-views-로직을-만들고-url까지-연결시켜주었다-다음-시간에는-직접-화면에-구성해줄-template를-구성한다&quot;&gt;이까지 하면 views 로직을 만들고 URL까지 연결시켜주었다. 다음 시간에는 직접 화면에 구성해줄 Template를 구성한다.&lt;/h2&gt;
</description>
        <pubDate>Sat, 04 May 2019 12:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-10.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-views%E1%84%89%E1%85%A5%E1%86%AF%E1%84%80%E1%85%A8-%E1%84%86%E1%85%B5%E1%86%BE-url%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%80%E1%85%A7%E1%86%AF.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-10.-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7-views%E1%84%89%E1%85%A5%E1%86%AF%E1%84%80%E1%85%A8-%E1%84%86%E1%85%B5%E1%86%BE-url%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%80%E1%85%A7%E1%86%AF.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 06. Bookmark views 및 url 구현하기</title>
        <description>&lt;h3 id=&quot;20190504-장고를-활용하여-북마크의-view-및-url-구현하기&quot;&gt;2019.05.04 장고를 활용하여 북마크의 view 및 url 구현하기&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Views.py 만들기
    &lt;ul&gt;
      &lt;li&gt;함수형 뷰 및 클래스형 뷰 공부하기&lt;/li&gt;
      &lt;li&gt;클래스형 뷰를 통해 구현하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2차 url 만들기&lt;/li&gt;
  &lt;li&gt;1차 url에 연결시켜주기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-북마크-만들기&quot;&gt;1. 북마크 만들기&lt;/h1&gt;

&lt;h1 id=&quot;1-viewspy-만들기&quot;&gt;1. VIews.py 만들기&lt;/h1&gt;

&lt;h2 id=&quot;views에-대해-먼저-알고-가기&quot;&gt;views에 대해 먼저 알고 가기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;클래스형 뷰와 함수형 뷰는 서로 상호 기능 제약이 거의 없다.
    &lt;ul&gt;
      &lt;li&gt;클래스형 뷰로 만드는 것은 모두 함수형 뷰로 가능하고 서로 바꿔서도 가능하다.
        &lt;ul&gt;
          &lt;li&gt;하지만 구현 방법이 조금씩 달라질 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;가장 기본적인 것들을 많이 쓰면 클래스형 뷰가 좋고&lt;/li&gt;
      &lt;li&gt;기본적으로 처리해야되는 것조차 커스터마이징이 필요하면 함수형 뷰가 좋다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;함수형 뷰
    &lt;ul&gt;
      &lt;li&gt;def 뷰이름(request[, 추가인수]) : 처리할 내용&lt;/li&gt;
      &lt;li&gt;CRUDL에 특별한 처리를 추가해야 되는 경우&lt;/li&gt;
      &lt;li&gt;함수형 뷰는 자유도가 클래스형 뷰에 비해 높다.&lt;/li&gt;
      &lt;li&gt;처리할 코드를 직접 다 개발자가 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클래스형 뷰
    &lt;ul&gt;
      &lt;li&gt;class 뷰이름(제네릭뷰 상속): 처리할 내용&lt;/li&gt;
      &lt;li&gt;CRUDL에 관련된 기능은 자주 사용하기 때문에 장고에서 제네릭 형태로 미리 만들어 놓음&lt;/li&gt;
      &lt;li&gt;클래스형 뷰는 생산형이 함수형 뷰에 비해 높다.&lt;/li&gt;
      &lt;li&gt;제네릭 기능 외우 추가적인 기능을 개발자가 작성&lt;/li&gt;
      &lt;li&gt;쭉 적는 것이 아닌 메서드 방식 - 커스터마이징에 관련된 메서드를 찾아야 한다.
        &lt;ul&gt;
          &lt;li&gt;어떤 기능에 대한 커스터마이징을 하느냐에 따라서 찾아봐야한다.(쿼리셋)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;뷰의 기본 : CRUDL!
    &lt;ul&gt;
      &lt;li&gt;Create : 생성과 관련된 로직 구성&lt;/li&gt;
      &lt;li&gt;Read : 한 개의 파일에 대한 상세 페이지 구성 (detail로 활용)&lt;/li&gt;
      &lt;li&gt;Update : 수정하기와 관련된 로직 구성&lt;/li&gt;
      &lt;li&gt;Delete : 삭제하기와 관련된 로직 구성&lt;/li&gt;
      &lt;li&gt;List : 메인 화면과 관련된 로직 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;뷰를 만든 다음에는 url을 연결해줘야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;viewspy-구성하기&quot;&gt;views.py 구성하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;클래스형 뷰를 통한 구현 실행&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;859&quot; alt=&quot;스크린샷 2019-05-04 오후 2 28 17&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174385-e6dec200-6e78-11e9-9044-3195347c9c3f.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Listview, Createview, deleteview,detailview,updateview  임포트 해오기&lt;/li&gt;
  &lt;li&gt;BookmarkList:
    &lt;ol&gt;
      &lt;li&gt;가장 메인에서 보여줄 로직&lt;/li&gt;
      &lt;li&gt;북마크 모델을 불러와서 데이터를 활용할 것이라고 기제&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;BookmarkCreate:
    &lt;ol&gt;
      &lt;li&gt;북마크 모델을 활용하는데&lt;/li&gt;
      &lt;li&gt;생성할 때 채워야 할 필드 확인&lt;/li&gt;
      &lt;li&gt;이후 연결될 템플릿 이름은 bookmark_create 일 것이다.&lt;/li&gt;
      &lt;li&gt;성공하면 메인 페이지로 돌아가도록 연결(이후 url로 연결)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;BookmarkUpdate:
    &lt;ol&gt;
      &lt;li&gt;Create와 마찬가지로 field가 꼭 필요하다&lt;/li&gt;
      &lt;li&gt;대부분 Create와 동일&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;BookmarkDelete와 BookmarkDetail
    &lt;ol&gt;
      &lt;li&gt;삭제와 상세페이지는 특별한 로직이 필요하지 않음&lt;/li&gt;
      &lt;li&gt;템플릿과 연결을 잘 시킬 수 있도록 신경&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;url-연결하기&quot;&gt;URL 연결하기&lt;/h1&gt;

&lt;h2 id=&quot;2차-url-연결하기&quot;&gt;2차 URL 연결하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;bookmark의  urls.py 생성&lt;/li&gt;
  &lt;li&gt;URL 작성하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1424&quot; alt=&quot;F56E6C48-629C-4DD0-86D7-E90FBBFAAB79&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57173384-04585f80-6e6a-11e9-80d5-c1d7e18188e8.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;app_name 설정을 통해 namespace(이름공간)확보
    &lt;ol&gt;
      &lt;li&gt;다른 앱들과 url pattern 이름이 겹치는 것을 방지하기 위해 사용한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;path(url pattern, view, url pattern name)
    &lt;ul&gt;
      &lt;li&gt;함수형 뷰는 이름만 적으면 되고 클래스형 뷰는 이름.as_view()&lt;/li&gt;
      &lt;li&gt;name은 나중에 불러쓰기 위해 지정한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;url pattern
    &lt;ol&gt;
      &lt;li&gt;&amp;lt;int:pk&amp;gt;
        &lt;ol&gt;
          &lt;li&gt;해당 작성에 대한 번호로 이동해야지 상세페이지 및 그 글에 대한 삭제, 수정을 할 수 있다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;views 경로 지정
    &lt;ol&gt;
      &lt;li&gt;해당 url이 들어오면 views의 해당 view의 로직을 따라서 처리한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;name
    &lt;ol&gt;
      &lt;li&gt;네임 설정을 통해 이후 클릭하면 해당 url로 이동하도록 설정한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1차-url-연결하기&quot;&gt;1차 URL 연결하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;config의 url.py에 작성&lt;/li&gt;
  &lt;li&gt;2차 URL을 설정한 이후에 가장 기본이 되는 URL과 연결시켜준다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;947&quot; alt=&quot;BCE395FA-A008-4EBA-BF47-EEFF09F362F6&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57173385-07535000-6e6a-11e9-9eba-b157978ae0c4.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;기본적으로 admin 주소는 설정되어 있다.&lt;/li&gt;
  &lt;li&gt;include를 통해서 해당 주소로 연결시켜준다.
    &lt;ol&gt;
      &lt;li&gt;가장 기본 주소가 들어오면 bookmark의 url로 연결시켜줘라.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이까지-하면-views-로직을-만들고-url까지-연결시켜주었다-다음-시간에는-직접-화면에-구성해줄-template를-구성한다&quot;&gt;이까지 하면 views 로직을 만들고 URL까지 연결시켜주었다. 다음 시간에는 직접 화면에 구성해줄 Template를 구성한다.&lt;/h2&gt;
</description>
        <pubDate>Sat, 04 May 2019 12:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-06.-Bookmark-views-%E1%84%86%E1%85%B5%E1%86%BE-url-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-06.-Bookmark-views-%E1%84%86%E1%85%B5%E1%86%BE-url-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
  </channel>
</rss>
