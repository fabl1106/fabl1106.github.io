<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>대구 올빼미의 새벽 개발로그</title>
    <description>대구 올빼미의 새벽 개발로그</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 04 May 2019 16:18:38 +0900</pubDate>
    <lastBuildDate>Sat, 04 May 2019 16:18:38 +0900</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Django 08. Bookmark 개별 템플릿 만들기 및 링크연결</title>
        <description>&lt;h3 id=&quot;20190504-북마크-프로젝트의-개별-상세페이지를-만들고-링크를-연동하여-연결시켜-줍니다&quot;&gt;2019.05.04 북마크 프로젝트의 개별 상세페이지를 만들고 링크를 연동하여 연결시켜 줍니다.&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;개별 템플릿 꾸미기&lt;/li&gt;
  &lt;li&gt;base.html과 연동시켜주기&lt;/li&gt;
  &lt;li&gt;링크를 연결하여 페이지 이동시키기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;개별-템플릿-만들기&quot;&gt;개별 템플릿 만들기&lt;/h1&gt;

&lt;h2 id=&quot;bookmark-템플릿-수정하기&quot;&gt;bookmark 템플릿 수정하기&lt;/h2&gt;

&lt;h3 id=&quot;bookmark-list&quot;&gt;bookmark list&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1017&quot; alt=&quot;스크린샷 2019-05-04 오후 1 31 39&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174130-69b14e00-6e74-11e9-9fd7-b0bc40fed86f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;block content 구성&lt;/li&gt;
  &lt;li&gt;models 을 통해 생성된 object의 list들을 돌면서 한 줄씩 가지고 온다.
    &lt;ul&gt;
      &lt;li&gt;해당 object의 id/ site_name/ url 나열&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각각의 링크 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_create&quot;&gt;bookmark_create&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;769&quot; alt=&quot;스크린샷 2019-05-04 오후 1 36 08&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174131-6b7b1180-6e74-11e9-9f56-c48aa384de5f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form을 활용하여 입력창 생성&lt;/li&gt;
  &lt;li&gt;post형식으로 전송&lt;/li&gt;
  &lt;li&gt;{ csrf_token }을 작성하여 보안문제 해결&lt;/li&gt;
  &lt;li&gt;를 적어줌으로서 한줄씩 띄우면서 create의 field에 등록된 것을 가지고 옴&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_detail&quot;&gt;bookmark_detail&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1243&quot; alt=&quot;D2667FDE-3F5D-4A6F-8B80-7B1587ABCA8A&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174133-6ddd6b80-6e74-11e9-91f2-17b3c0f608f1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해당 컨텐츠의 이름/ url / content를 보여준다.&lt;/li&gt;
  &lt;li&gt;수정과 삭제를 할 수 있도록 링크 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_delete&quot;&gt;bookmark_delete&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;796&quot; alt=&quot;F11BCB62-DAD1-474D-8EC6-72B10C33BD98&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174134-6f0e9880-6e74-11e9-8bea-2f1d5d7bc24f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form 형식으로 구현&lt;/li&gt;
  &lt;li&gt;한번 더 실제로 지울지를 확인하는 페이지로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bookmark_update&quot;&gt;bookmark_update&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;759&quot; alt=&quot;81B685AD-43C9-470D-AA9B-502CB6D026A9&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174136-70d85c00-6e74-11e9-9828-e37f98133bbb.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create와 비슷하게 구현&lt;/li&gt;
  &lt;li&gt;폼 형태로 입력할 수 있도록 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;실제-실행-및-실제-페이지-확인&quot;&gt;실제 실행 및 실제 페이지 확인&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;python manage.py runserver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1254&quot; alt=&quot;스크린샷 2019-05-04 오후 2 30 54&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174398-3f15c400-6e79-11e9-8fc8-11c4874754a2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;1234&quot; alt=&quot;스크린샷 2019-05-04 오후 2 20 46&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174392-1e4d6e80-6e79-11e9-8923-90a675568879.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 04 May 2019 14:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-08.-Bookmark-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A7%E1%86%AF-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%85%E1%85%B5%E1%86%BC%E1%84%8F%E1%85%B3%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%80%E1%85%A7%E1%86%AF.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-08.-Bookmark-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A7%E1%86%AF-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%85%E1%85%B5%E1%86%BC%E1%84%8F%E1%85%B3%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%80%E1%85%A7%E1%86%AF.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 07. Bookmark 템플릿 만들기 및 base.html에 연동시키기</title>
        <description>&lt;h3 id=&quot;20190504-북마크-프로젝트의-템플릿-만들기-및-basehtml에-연동시키기&quot;&gt;2019.05.04 북마크 프로젝트의 템플릿 만들기 및 base.html에 연동시키기&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;템플릿 만들기&lt;/li&gt;
  &lt;li&gt;base.html에 연결하기&lt;/li&gt;
  &lt;li&gt;템플릿 꾸미기
    &lt;ul&gt;
      &lt;li&gt;부트스트랩 활용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;템플릿-만들기&quot;&gt;템플릿 만들기&lt;/h1&gt;

&lt;h2 id=&quot;1-템플릿-만들기&quot;&gt;1. 템플릿 만들기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;bookmark 아래에 templates 폴더 만들기&lt;/li&gt;
  &lt;li&gt;templates 아래에 bookmark 폴더 만들기&lt;/li&gt;
  &lt;li&gt;그 아래에 html 파일들 생성해주기&lt;/li&gt;
  &lt;li&gt;이후 많은 앱들이 생기는 경우 서로 겹치는 문제를 해결하기 위해 templates 아래에 bookmark폴더를 다시 만들고 html파일 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1035&quot; alt=&quot;590CF98A-B512-47DE-B9F0-593788F31DD2&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174125-60c07c80-6e74-11e9-9253-ecfd632abb34.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-basehtml에-연결하기&quot;&gt;2. base.html에 연결하기&lt;/h2&gt;

&lt;h3 id=&quot;템플릿-분리형-확장&quot;&gt;템플릿 분리형 확장&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;매번 있어야하는 내용을 지속적으로 넣어주기가 귀찮음&lt;/li&gt;
  &lt;li&gt;앱 별로는 각각의 템플릿에 필요하나 전체 앱에 있어야하는 것은 전체 루트위로 뺀다.&lt;/li&gt;
  &lt;li&gt;전체 프로젝트 아래에 layout을 만들고 아래에 base.html을 만든다.&lt;/li&gt;
  &lt;li&gt;내가 원하는 부분부분 나누어 놓는다.(by block)
    &lt;ul&gt;
      &lt;li&gt;bookmark 템플릿들은 base.html을 확장받아 사용한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;settings templates
    &lt;ul&gt;
      &lt;li&gt;base.html을 찾을 수 있도록 경로를 지정해준다.&lt;/li&gt;
      &lt;li&gt;DIR에 추가적으로 등록해놓는다. (directorys)
        &lt;ul&gt;
          &lt;li&gt;os.path.join(베이스디렉토리의 layout 폴더를 등록해놓는다.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;base.html을 부트스트랩을 디자인 할 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1338&quot; alt=&quot;3797052E-BBF5-4F7F-9D27-C5ED880B0FDD&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174126-64ec9a00-6e74-11e9-84cd-b960072e093a.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;layout 디렉토리를 만들고 그 아래에 base.html을 만듭니다.&lt;/li&gt;
  &lt;li&gt;layout 경로를 찾을 수 있도록 setting에 templates 경로를 지정해줍니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-bootstrap-적용하기&quot;&gt;3. Bootstrap 적용하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;부트스트랩을 적용하면 누구나 손쉽게 웹사이트 디자인을 할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap · The most popular HTML, CSS, and JS library in the world.&lt;/a&gt; 에 접속합니다.&lt;/li&gt;
  &lt;li&gt;base.html 파일에 부트스트랩을 사용하기 위해 필요한 css 및 javascript 링크를 넣습니다.
    &lt;ol&gt;
      &lt;li&gt;css 파일은 head의 마지막에 위치&lt;/li&gt;
      &lt;li&gt;javascript 파일은 body의 마지막에 위치&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#css &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;#javascript&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integrity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;부트스트랩에서 마음에 드는 navbar를 가지고 옵니다.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/4.3/components/navbar/&quot;&gt;Navbar · Bootstrap&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1240&quot; alt=&quot;950BEEB6-C57F-42DD-A23D-BAEB19DA1A8F&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174127-66b65d80-6e74-11e9-932a-32dd1b00b0c9.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;마음에 드는 포맷을 찾으면 해당 포맷을 적용할 html에 넣어줍니다.
    &lt;ol&gt;
      &lt;li&gt;지금은  base.html에 넣어줍니다.(body tag내 위치)&lt;/li&gt;
      &lt;li&gt;파일들을 적절하게 수정하고 클릭시 연결할 링크를 연결해줍니다.
        &lt;ol&gt;
          &lt;li&gt;&amp;lt;a href = “ “ &amp;gt; 내 위치&lt;/li&gt;
          &lt;li&gt;url ‘bookmark:index’ 등과 같이 연결&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;block content를 만들어서 다른 템플릿에서 추가할 수 있도록 구성합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1244&quot; alt=&quot;21BCAAC7-3E89-48CC-87D2-F7510382814D&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174128-68802100-6e74-11e9-9f2a-91dda319b098.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;상단 링크 구성을 Home과  북마크 생성하기로 구성&lt;/li&gt;
  &lt;li&gt;아래쪽에 { block content } { endblock } 을 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다음-시간에는-상세-페이지들을-하나씩-구성해보겠습니다&quot;&gt;다음 시간에는 상세 페이지들을 하나씩 구성해보겠습니다.&lt;/h2&gt;
</description>
        <pubDate>Sat, 04 May 2019 13:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-07.-Bookmark-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-base.html%E1%84%8B%E1%85%A6-%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%B5%E1%84%8F%E1%85%B5%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-07.-Bookmark-%E1%84%90%E1%85%A6%E1%86%B7%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%B5%E1%86%BA-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-base.html%E1%84%8B%E1%85%A6-%E1%84%8B%E1%85%A7%E1%86%AB%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%B5%E1%84%8F%E1%85%B5%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 06. Bookmark views 및 url 구현하기</title>
        <description>&lt;h3 id=&quot;20190504-장고를-활용하여-북마크의-view-및-url-구현하기&quot;&gt;2019.05.04 장고를 활용하여 북마크의 view 및 url 구현하기&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Views.py 만들기
    &lt;ul&gt;
      &lt;li&gt;함수형 뷰 및 클래스형 뷰 공부하기&lt;/li&gt;
      &lt;li&gt;클래스형 뷰를 통해 구현하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2차 url 만들기&lt;/li&gt;
  &lt;li&gt;1차 url에 연결시켜주기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-북마크-만들기&quot;&gt;1. 북마크 만들기&lt;/h1&gt;

&lt;h1 id=&quot;1-viewspy-만들기&quot;&gt;1. VIews.py 만들기&lt;/h1&gt;

&lt;h2 id=&quot;views에-대해-먼저-알고-가기&quot;&gt;views에 대해 먼저 알고 가기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;클래스형 뷰와 함수형 뷰는 서로 상호 기능 제약이 거의 없다.
    &lt;ul&gt;
      &lt;li&gt;클래스형 뷰로 만드는 것은 모두 함수형 뷰로 가능하고 서로 바꿔서도 가능하다.
        &lt;ul&gt;
          &lt;li&gt;하지만 구현 방법이 조금씩 달라질 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;가장 기본적인 것들을 많이 쓰면 클래스형 뷰가 좋고&lt;/li&gt;
      &lt;li&gt;기본적으로 처리해야되는 것조차 커스터마이징이 필요하면 함수형 뷰가 좋다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;함수형 뷰
    &lt;ul&gt;
      &lt;li&gt;def 뷰이름(request[, 추가인수]) : 처리할 내용&lt;/li&gt;
      &lt;li&gt;CRUDL에 특별한 처리를 추가해야 되는 경우&lt;/li&gt;
      &lt;li&gt;함수형 뷰는 자유도가 클래스형 뷰에 비해 높다.&lt;/li&gt;
      &lt;li&gt;처리할 코드를 직접 다 개발자가 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클래스형 뷰
    &lt;ul&gt;
      &lt;li&gt;class 뷰이름(제네릭뷰 상속): 처리할 내용&lt;/li&gt;
      &lt;li&gt;CRUDL에 관련된 기능은 자주 사용하기 때문에 장고에서 제네릭 형태로 미리 만들어 놓음&lt;/li&gt;
      &lt;li&gt;클래스형 뷰는 생산형이 함수형 뷰에 비해 높다.&lt;/li&gt;
      &lt;li&gt;제네릭 기능 외우 추가적인 기능을 개발자가 작성&lt;/li&gt;
      &lt;li&gt;쭉 적는 것이 아닌 메서드 방식 - 커스터마이징에 관련된 메서드를 찾아야 한다.
        &lt;ul&gt;
          &lt;li&gt;어떤 기능에 대한 커스터마이징을 하느냐에 따라서 찾아봐야한다.(쿼리셋)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;뷰의 기본 : CRUDL!
    &lt;ul&gt;
      &lt;li&gt;Create : 생성과 관련된 로직 구성&lt;/li&gt;
      &lt;li&gt;Read : 한 개의 파일에 대한 상세 페이지 구성 (detail로 활용)&lt;/li&gt;
      &lt;li&gt;Update : 수정하기와 관련된 로직 구성&lt;/li&gt;
      &lt;li&gt;Delete : 삭제하기와 관련된 로직 구성&lt;/li&gt;
      &lt;li&gt;List : 메인 화면과 관련된 로직 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;뷰를 만든 다음에는 url을 연결해줘야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;viewspy-구성하기&quot;&gt;views.py 구성하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;클래스형 뷰를 통한 구현 실행&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;859&quot; alt=&quot;스크린샷 2019-05-04 오후 2 28 17&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57174385-e6dec200-6e78-11e9-9044-3195347c9c3f.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Listview, Createview, deleteview,detailview,updateview  임포트 해오기&lt;/li&gt;
  &lt;li&gt;BookmarkList:
    &lt;ol&gt;
      &lt;li&gt;가장 메인에서 보여줄 로직&lt;/li&gt;
      &lt;li&gt;북마크 모델을 불러와서 데이터를 활용할 것이라고 기제&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;BookmarkCreate:
    &lt;ol&gt;
      &lt;li&gt;북마크 모델을 활용하는데&lt;/li&gt;
      &lt;li&gt;생성할 때 채워야 할 필드 확인&lt;/li&gt;
      &lt;li&gt;이후 연결될 템플릿 이름은 bookmark_create 일 것이다.&lt;/li&gt;
      &lt;li&gt;성공하면 메인 페이지로 돌아가도록 연결(이후 url로 연결)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;BookmarkUpdate:
    &lt;ol&gt;
      &lt;li&gt;Create와 마찬가지로 field가 꼭 필요하다&lt;/li&gt;
      &lt;li&gt;대부분 Create와 동일&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;BookmarkDelete와 BookmarkDetail
    &lt;ol&gt;
      &lt;li&gt;삭제와 상세페이지는 특별한 로직이 필요하지 않음&lt;/li&gt;
      &lt;li&gt;템플릿과 연결을 잘 시킬 수 있도록 신경&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;url-연결하기&quot;&gt;URL 연결하기&lt;/h1&gt;

&lt;h2 id=&quot;2차-url-연결하기&quot;&gt;2차 URL 연결하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;bookmark의  urls.py 생성&lt;/li&gt;
  &lt;li&gt;URL 작성하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1424&quot; alt=&quot;F56E6C48-629C-4DD0-86D7-E90FBBFAAB79&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57173384-04585f80-6e6a-11e9-80d5-c1d7e18188e8.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;app_name 설정을 통해 namespace(이름공간)확보
    &lt;ol&gt;
      &lt;li&gt;다른 앱들과 url pattern 이름이 겹치는 것을 방지하기 위해 사용한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;path(url pattern, view, url pattern name)
    &lt;ul&gt;
      &lt;li&gt;함수형 뷰는 이름만 적으면 되고 클래스형 뷰는 이름.as_view()&lt;/li&gt;
      &lt;li&gt;name은 나중에 불러쓰기 위해 지정한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;url pattern
    &lt;ol&gt;
      &lt;li&gt;&amp;lt;int:pk&amp;gt;
        &lt;ol&gt;
          &lt;li&gt;해당 작성에 대한 번호로 이동해야지 상세페이지 및 그 글에 대한 삭제, 수정을 할 수 있다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;views 경로 지정
    &lt;ol&gt;
      &lt;li&gt;해당 url이 들어오면 views의 해당 view의 로직을 따라서 처리한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;name
    &lt;ol&gt;
      &lt;li&gt;네임 설정을 통해 이후 클릭하면 해당 url로 이동하도록 설정한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1차-url-연결하기&quot;&gt;1차 URL 연결하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;config의 url.py에 작성&lt;/li&gt;
  &lt;li&gt;2차 URL을 설정한 이후에 가장 기본이 되는 URL과 연결시켜준다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;947&quot; alt=&quot;BCE395FA-A008-4EBA-BF47-EEFF09F362F6&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57173385-07535000-6e6a-11e9-9eba-b157978ae0c4.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;기본적으로 admin 주소는 설정되어 있다.&lt;/li&gt;
  &lt;li&gt;include를 통해서 해당 주소로 연결시켜준다.
    &lt;ol&gt;
      &lt;li&gt;가장 기본 주소가 들어오면 bookmark의 url로 연결시켜줘라.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;이까지-하면-views-로직을-만들고-url까지-연결시켜주었다-다음-시간에는-직접-화면에-구성해줄-template를-구성한다&quot;&gt;이까지 하면 views 로직을 만들고 URL까지 연결시켜주었다. 다음 시간에는 직접 화면에 구성해줄 Template를 구성한다.&lt;/h2&gt;
</description>
        <pubDate>Sat, 04 May 2019 12:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-06.-Bookmark-views-%E1%84%86%E1%85%B5%E1%86%BE-url-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-06.-Bookmark-views-%E1%84%86%E1%85%B5%E1%86%BE-url-%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5.html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Django 05. Bookmark프로젝트 시작하기(models)</title>
        <description>&lt;h3 id=&quot;20190504-장고-bookmark-만들기-프로젝트&quot;&gt;2019.05.04 장고 Bookmark 만들기 프로젝트&lt;/h3&gt;

&lt;h1 id=&quot;개인-bookmark웹-만들기&quot;&gt;개인 Bookmark웹 만들기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;웹사이트를 통해 개인 북마크를 설정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;북마크에는 url 주소와 사이트명이 들어간다.&lt;/li&gt;
      &lt;li&gt;해당 사이트에 대한 설명과 작성일자가 자동으로 생성된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메인 페이지에서 해당 북마크에 대한 리스트를 보여준다.
    &lt;ul&gt;
      &lt;li&gt;메인페이지에서 북마크 추가하기 버튼으로 추가할 수 있다.&lt;/li&gt;
      &lt;li&gt;해당 북마크를 클릭하면 상세페이지로 이동한다.&lt;/li&gt;
      &lt;li&gt;상세페이지에서 수정 및 삭제를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;base.html과 연동하여 쉽게 구현할 수 있도록 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이번-시간에-할-것&quot;&gt;이번 시간에 할 것&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 시작하기&lt;/li&gt;
  &lt;li&gt;앱 만들기&lt;/li&gt;
  &lt;li&gt;models를 통해 DB 구축하기&lt;/li&gt;
  &lt;li&gt;만들어진 DB를 admin 사이트에 접속하여 확인하기&lt;/li&gt;
  &lt;li&gt;DB 등록하기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-북마크-만들기&quot;&gt;1. 북마크 만들기&lt;/h1&gt;

&lt;h2 id=&quot;프로젝트-시작-준비하기&quot;&gt;프로젝트 시작 준비하기&lt;/h2&gt;

&lt;h3 id=&quot;가상-환경-만들기&quot;&gt;가상 환경 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;pip3 install virtualenv&lt;/li&gt;
  &lt;li&gt;virtualenv -python = python3.7 venv&lt;/li&gt;
  &lt;li&gt;venv라는 가상환경 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;가상-환경-실행하기&quot;&gt;가상 환경 실행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;source venv/bin/activate&lt;/li&gt;
  &lt;li&gt;해당 터미널에 venv ) 표시 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;장고-설치하기&quot;&gt;장고 설치하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;pip install django==2.2&lt;/li&gt;
  &lt;li&gt;원하는 버전의 장고 설치&lt;/li&gt;
  &lt;li&gt;가상환경이므로 더 이상 pip3를 해줄 필요 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;프로젝트-생성하기&quot;&gt;프로젝트 생성하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;django-admin startproject config .&lt;/li&gt;
  &lt;li&gt;config는 프로젝트명 뒤에 .은 해당 디렉토리에 생성&lt;/li&gt;
  &lt;li&gt;config내에 setting 및 url.py 등 관련 내용 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터베이스-migrate해주기&quot;&gt;데이터베이스 migrate해주기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;생성된 프로젝트에 대한 데이터베이스 초기화&lt;/li&gt;
  &lt;li&gt;python manage.py migrate&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;북마크-앱-만들기&quot;&gt;북마크 앱 만들기&lt;/h2&gt;

&lt;h3 id=&quot;앱-설치하기&quot;&gt;앱 설치하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;python manage.py startapp bookmark&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1112&quot; alt=&quot;EF0BAE6D-9615-436F-A81A-00425884F267&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57172928-f9013600-6e61-11e9-81c4-70b60ececfd5.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 및 앱 설치 이후 상태 확인&lt;/li&gt;
  &lt;li&gt;settings.py에 installed app에 bookmark 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;model-설계하기&quot;&gt;model 설계하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;해당 bookmark 폴더의 models.py 이동
    &lt;ol&gt;
      &lt;li&gt;site_name/url/contents/created 구성&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;str 구성을 통해 admin 화면에서 보이는 모습 구현
    &lt;ol&gt;
      &lt;li&gt;site_name 및 url 보이도록 구현&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;class Meta : ordering을 통해 정렬 순서 구현
    &lt;ol&gt;
      &lt;li&gt;생성일자 역순으로 정렬 순서 구현&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1100&quot; alt=&quot;052805CF-1848-4786-9582-B5D6ADE34ACD&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57172933-17673180-6e62-11e9-8a41-6418cd3a60ab.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;모델 설계 이후에 데이터베이스에 migration 해주기
    &lt;ol&gt;
      &lt;li&gt;python manage.py makemigrations bookmark : 변경 사항 추적 및 기록하기&lt;/li&gt;
      &lt;li&gt;python manage.py migrate bookmark 0001 : 변경 사항 DB에 적용하기
        &lt;ol&gt;
          &lt;li&gt;migrate뒤 bookmark 0001 은 굳이 안해줘도 되나 실무에서 여러 사람이 함께 프로젝트를 진행해야되는 상황이 외면 꼭 해줘야 한다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;model에-대한-추가적인-공부&quot;&gt;model에 대한 추가적인 공부&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모델의 형태 - class
    &lt;ul&gt;
      &lt;li&gt;class Bookmark(models.Model)
        &lt;ul&gt;
          &lt;li&gt;models.Model을 상속 받는 이유&lt;/li&gt;
          &lt;li&gt;상속 : 어떤 클래스가 부모 클래스를 상속 받는다.&lt;/li&gt;
          &lt;li&gt;부모클래스가 가지고 있는 메서드 및 속성 값을 사용하기 위해서&lt;/li&gt;
          &lt;li&gt;models.Model이 가지고 있는 메서드나 속성값을 사용하기 위해서 사용&lt;/li&gt;
          &lt;li&gt;models.Model : ORM 관련 기능들
            &lt;ul&gt;
              &lt;li&gt;DB를 추상화해서 코드로 조작할 수 있게 하는 기능&lt;/li&gt;
              &lt;li&gt;데이터를 추가, 수정, 검색, 삭제&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용자에게 안 받지만 필요한 것
    &lt;ul&gt;
      &lt;li&gt;작성자 : 로그인한 유저정보를 찾아서 추가
        &lt;ul&gt;
          &lt;li&gt;장고에서는 기본적으로 id값을 생성하여 저장시켜준다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;작성일 : 서버 시간을 읽어서 timestamp값을 만들어 추가
        &lt;ul&gt;
          &lt;li&gt;자동 옵션 auto_now, auto_now_add를 하면 자동 서버시간을 저장해준다.&lt;/li&gt;
          &lt;li&gt;단 setting에서 TIME_ZONE = “Asia/Seoul” 로 해준다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;admin에서-모델-확인하기&quot;&gt;admin에서 모델 확인하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;admin.py로 이동&lt;/li&gt;
  &lt;li&gt;from .models import Bookmark&lt;/li&gt;
  &lt;li&gt;admin.site.register(Bookmark)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;￼
&lt;img width=&quot;1053&quot; alt=&quot;393886A4-1AE2-4F51-A535-1D2EC41E8186&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57172932-1504d780-6e62-11e9-87f8-0fce0433ee22.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;model-확인해보기&quot;&gt;model 확인해보기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;superuser 생성 : admin 사이트 로그인을 위해
    &lt;ol&gt;
      &lt;li&gt;python manage.py createsuperuser&lt;/li&gt;
      &lt;li&gt;아이디 및 비밀번호 등록&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;파이썬-서버-실행-시켜보기&quot;&gt;파이썬 서버 실행 시켜보기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;서버 실행하기
    &lt;ol&gt;
      &lt;li&gt;python manage.py runserver [포트번호]&lt;/li&gt;
      &lt;li&gt;실행 이후 나오는 url로 접속&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1239&quot; alt=&quot;F40C76E0-3161-4FFA-9DEE-00E0152EE7D1&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57172934-1930f500-6e62-11e9-8a0b-ec6141c4ca15.png&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;url 뒤에 admin을 붙여서 해당 admin으로 접근 및 로그인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;해당 bookmark를 통해 몇가지를 직접 add 해보기&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img width=&quot;1874&quot; alt=&quot;8817740F-675B-4301-8ADA-858DBCC72666&quot; src=&quot;https://user-images.githubusercontent.com/46436843/57172935-1a622200-6e62-11e9-982e-c451009406b8.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;다음에서-직접-viewspy를-작성하여-url에-연결하여-봅니다&quot;&gt;다음에서 직접 views.py를 작성하여 url에 연결하여 봅니다.&lt;/h2&gt;

</description>
        <pubDate>Sat, 04 May 2019 11:06:23 +0900</pubDate>
        <link>http://localhost:4000/django/2019/05/04/Django-05.-Bookmark%E1%84%91%E1%85%B3%E1%84%85%E1%85%A9%E1%84%8C%E1%85%A6%E1%86%A8%E1%84%90%E1%85%B3-%E1%84%89%E1%85%B5%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5(models).html</link>
        <guid isPermaLink="true">http://localhost:4000/django/2019/05/04/Django-05.-Bookmark%E1%84%91%E1%85%B3%E1%84%85%E1%85%A9%E1%84%8C%E1%85%A6%E1%86%A8%E1%84%90%E1%85%B3-%E1%84%89%E1%85%B5%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5(models).html</guid>
        
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>2019_05_02_TIL</title>
        <description>&lt;h3 id=&quot;20190502-til&quot;&gt;2019.05.02 TIL&lt;/h3&gt;

&lt;h1 id=&quot;to-do&quot;&gt;To do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;유튜브 1회 올리기 - django 관련
        &lt;ul&gt;
          &lt;li&gt;토요일날 북마크 만들기 영상 한번에 다 촬영해서 올리기!&lt;/li&gt;
          &lt;li&gt;일요일 혹은 월요일날 인스타그램 만들기 영상 한번에 다 촬영해서 올리기!&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기
        &lt;ul&gt;
          &lt;li&gt;BOOKMARK TIL 진행하기&lt;/li&gt;
          &lt;li&gt;&lt;del&gt;오늘 배운 것 공부 진행&lt;/del&gt;&lt;/li&gt;
          &lt;li&gt;인스타그램 끝나면 인스타그램 다시 해보기
            &lt;ul&gt;
              &lt;li&gt;로직을 구성하기 위해 노력하자(수업의 흐름을 잃어도 로직을 적자. 완벽하지 않아도 된다.)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;del&gt;서버 배포해보기&lt;/del&gt;
        &lt;ul&gt;
          &lt;li&gt;서버를 배포해보지 못했다…&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기
        &lt;ul&gt;
          &lt;li&gt;해결을 하지 못했다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;폼 2개 동시에 띄우게 해보기&lt;/li&gt;
      &lt;li&gt;회원가입 구현하기&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;댓글 기능 구현&lt;/del&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;운동하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;데일리 리포트 및 피드백 진행&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;독서&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;영어 1개 암기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;~~블로그 글쓰기 ~~&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;til&quot;&gt;TIL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;오늘이 최악의 하루라도 기억하고 반성해야 한다.&lt;/li&gt;
  &lt;li&gt;오늘 수업을 잘 못 따라갔다. ㅠㅠ 퓨 그런 감정은 굉장히 답답한 감정이었다.&lt;/li&gt;
  &lt;li&gt;주말에 복습을 통해서 좀 더 확실하게 할 수 있도록 해야되겠다.&lt;/li&gt;
  &lt;li&gt;요즘 TIL에 대해서 못 올리고 있는데… BOOKMARK부터 시작해서 인스타그램까지 완벽하게 할 수 있도록 만들어놓자. 이번 금요일 저녁 토일월 까지 해서 2가지 및 서버에 대해서 TIL 확실히 해 놓을 수 있도록 하자.&lt;/li&gt;
  &lt;li&gt;오늘 배운 기능 중에 굉장히 신기했던 것은 권한에 관한 내용이었는데 굉장히 간단하게 html 단에서 특정 상황에 대해 분기시켜서 보이지 않도록 만들어주는 것이었고, 또 views를 통해 권한에 대해서 다룰 수  있었다. 또한 슬슬 자바스크립트가 나오기 시작하는데 이 부분에 대해서도 공부를 좀 더 해야되겠다.&lt;/li&gt;
  &lt;li&gt;책을 구입하고 공부를 하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;today-was&quot;&gt;Today was&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;05:40 기상&lt;/li&gt;
  &lt;li&gt;06:00 ~ 07:30 운동&lt;/li&gt;
  &lt;li&gt;08:00 ~ 09:20 django 공부&lt;/li&gt;
  &lt;li&gt;09:20 ~ 09:40 영어 1개 암기&lt;/li&gt;
  &lt;li&gt;09:40 ~ 10:00 학교 이동&lt;/li&gt;
  &lt;li&gt;10:00 ~ 12:00 수업 1&lt;/li&gt;
  &lt;li&gt;12:40 ~ 13:00 수업 1 복습&lt;/li&gt;
  &lt;li&gt;13:00 ~ 15:00 수업 2&lt;/li&gt;
  &lt;li&gt;15:30 ~ 16:00 알고리즘 문제&lt;/li&gt;
  &lt;li&gt;16:00 ~ 17:00 수업 1, 2 복습&lt;/li&gt;
  &lt;li&gt;17:00 ~ 18:00 치과 및 저녁식사&lt;/li&gt;
  &lt;li&gt;19:00 ~ 21:30 수업 복습 및 프로젝트 진행&lt;/li&gt;
  &lt;li&gt;21:30 ~ 22:20 인스타그램 로직 구성&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;22:30 ~ 23:30 씻기 및 잠자기 전에 독서하기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;오늘 하루는 완벽한 하루였나?&lt;/li&gt;
  &lt;li&gt;나는 오늘 하루도 후회가 없냐?&lt;/li&gt;
  &lt;li&gt;나는 내일 일어나는 것이 설레는가?&lt;/li&gt;
  &lt;li&gt;오늘 하루를 어떤 기대감으로 시작하는가? 오늘 하루를 어떤 생각을 하며 살아가는가? 오늘 하루를 마무리하며 어떤 꿈을 꾸는가? 가 나를 결정한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tomorrow-do&quot;&gt;Tomorrow do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;인스타그램 선생님이 요청한 사항 할 수 있는데 까지 해보기&lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기 (금,토,일,월)
        &lt;ul&gt;
          &lt;li&gt;BOOKMARK 다시 만들어보기&lt;/li&gt;
          &lt;li&gt;BOOKMARK TIL 하기&lt;/li&gt;
          &lt;li&gt;인스타그램 다시 만들기&lt;/li&gt;
          &lt;li&gt;인스타그램 TIL하기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서버 배포해보기
        &lt;ul&gt;
          &lt;li&gt;북마크 및 디스타그램 상용 서비스로 만들기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기&lt;/li&gt;
      &lt;li&gt;자바스크립트 공부하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;폼 2개 동시에 띄우게 해보기&lt;/li&gt;
      &lt;li&gt;회원가입 구현하기&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;운동하기&lt;/li&gt;
      &lt;li&gt;데일리 리포트 및 피드백 진행&lt;/li&gt;
      &lt;li&gt;독서&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;영어 1개 암기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 02 May 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/til/2019/05/02/TIL.html</link>
        <guid isPermaLink="true">http://localhost:4000/til/2019/05/02/TIL.html</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>2019_05_01_TIL</title>
        <description>&lt;h3 id=&quot;20190501-til&quot;&gt;2019.05.01 TIL&lt;/h3&gt;

&lt;h1 id=&quot;to-do&quot;&gt;To do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;유튜브 1회 올리기 - django 관련&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;배운 것 TIL하기&lt;/del&gt;
        &lt;ul&gt;
          &lt;li&gt;요즘 계속 배우는 것들을 TIL 못하고 있다. 장고가 워낙 방대하다 보니 어디서 부터 해야할지 감이 안 오는 것 같다…&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서버 배포해보기&lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기
        &lt;ul&gt;
          &lt;li&gt;알고리즘 스터디 관련 글 올려보기&lt;/li&gt;
          &lt;li&gt;문제는 시도 하였으나 실패 ㅠㅠ&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;url 관련 해결하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;진도 나가보기&lt;/del&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;운동하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;데일리 리포트 및 피드백 진행&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;독서&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;영어 1개 암기&lt;/del&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;til&quot;&gt;TIL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;요즘은 계속 수업 배운 것에 대해 TIL을 못하고 있다. 일단 배운 것부터 한개씩 적용해봐야겠다. 내일은 북마크 만들기에 대해 TIL을 진행한다.&lt;/li&gt;
  &lt;li&gt;오늘은 인스타그램 코딩을 시작하였다. 굉장히 많은 것들을 하였는데 기본적으로 이미지를 사이트에 등록하는 방법. 그냥 폼 형식으로만 하면 다 text로 인식하여서 업로드가 안되는 문제를 해결했던 것, 그리고 파이썬에서 accounts의 로그인과 로그아웃 기능을 구현해주고 있어서 views만 연결해주면 되었던 것도 굉장히 신기하였다. (대신 setting에 로그인 이후에 갈 루트를 정해주어야 한다.)&lt;/li&gt;
  &lt;li&gt;BOOKMARK 프로젝트부터 하나씩 적어보고 나의 포트폴리오에 넣자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;today-was&quot;&gt;Today was&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;05:40 기상&lt;/li&gt;
  &lt;li&gt;06:00 ~ 09:00 개인 공부(웹프로그래밍)&lt;/li&gt;
  &lt;li&gt;09:00 ~ 09:30 운동&lt;/li&gt;
  &lt;li&gt;09:30 ~ 09:40 영어 1개 암기&lt;/li&gt;
  &lt;li&gt;09:40 ~ 10:00 학교 이동&lt;/li&gt;
  &lt;li&gt;10:00 ~ 12:00 수업 1&lt;/li&gt;
  &lt;li&gt;12:40 ~ 13:00 수업 1 복습&lt;/li&gt;
  &lt;li&gt;13:00 ~ 15:00 수업 2&lt;/li&gt;
  &lt;li&gt;15:30 ~ 16:00 사장님 상담&lt;/li&gt;
  &lt;li&gt;16:20 ~ 18:30 수업 1, 2 복습&lt;/li&gt;
  &lt;li&gt;18:30 ~ 19:00 저녁 식사&lt;/li&gt;
  &lt;li&gt;19:00 ~ 21:30 수업 복습 및 프로젝트 진행&lt;/li&gt;
  &lt;li&gt;21:30 ~ 22:20 코딩 1문제 풀기 클리어 못했다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;22:30 ~ 23:30 씻기 및 잠자기 전에 독서하기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;음… 텐션이 떨어질때는 음악을 들으면서 알고리즘 문제를 풀어보자!!&lt;/li&gt;
  &lt;li&gt;장고 부분도 TIL을 해가면서 나가자. 무언가 계속 정리를 안하고 앞으로만 나가니깐 나도 힘들고 다 힘들다 ㅠㅠ.&lt;/li&gt;
  &lt;li&gt;체력 운동을 하자! 러닝머신 20분 하기!!&lt;/li&gt;
  &lt;li&gt;근력 운동은 정말 빡세게 해서 단기간에 조지기&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tomorrow-do&quot;&gt;Tomorrow do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;유튜브 1회 올리기 - django 관련&lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기
        &lt;ul&gt;
          &lt;li&gt;BOOKMARK 다시 만들어보기&lt;/li&gt;
          &lt;li&gt;인스타그램 끝나면 인스타그램 다시 해보기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서버 배포해보기&lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기
        &lt;ul&gt;
          &lt;li&gt;알고리즘 스터디 관련 글 올려보기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;폼 2개 동시에 띄우게 해보기&lt;/li&gt;
      &lt;li&gt;회원가입 구현하기&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;운동하기&lt;/li&gt;
      &lt;li&gt;데일리 리포트 및 피드백 진행&lt;/li&gt;
      &lt;li&gt;독서&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;영어 1개 암기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 01 May 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/til/2019/05/01/TIL.html</link>
        <guid isPermaLink="true">http://localhost:4000/til/2019/05/01/TIL.html</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>알고리즘 05. k번째 수</title>
        <description>&lt;h3 id=&quot;20190430&quot;&gt;2019.04.30&lt;/h3&gt;

&lt;h2 id=&quot;프로그래머스-알고리즘-문제-lv1&quot;&gt;프로그래머스 알고리즘 문제 (lv1)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;K번째 수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h3&gt;

&lt;p&gt;배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면&lt;/p&gt;

&lt;p&gt;array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.  &lt;br /&gt;
1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.  &lt;br /&gt;
2에서 나온 배열의 3번째 숫자는 5입니다.    &lt;br /&gt;
배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, &lt;br /&gt;
commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록  &lt;br /&gt;
solution 함수를 작성해주세요.&lt;/p&gt;

&lt;h3 id=&quot;제한사항&quot;&gt;제한사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;array의 길이는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;array의 각 원소는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;commands의 길이는 1 이상 50 이하입니다.&lt;/li&gt;
  &lt;li&gt;commands의 각 원소는 길이가 3입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예시&quot;&gt;예시&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;468&quot; alt=&quot;스크린샷 2019-04-30 오후 4 13 04&quot; src=&quot;https://user-images.githubusercontent.com/46436843/56945666-e38ac400-6b62-11e9-90dd-f9e793ffd01e.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;나의-풀이-방법&quot;&gt;나의 풀이 방법&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;의식의 흐름&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;command가 3개만 들어오는게 아니라 여러개가 들어올 수도 있다.&lt;/li&gt;
  &lt;li&gt;command의 한개씩 뽑아내서 계산해서 값에 담는다.&lt;/li&gt;
  &lt;li&gt;뽑아낸 것에서 첫 번째 숫자와 2번 째 숫자 만큼 array에서 뽑고 정렬해서 3번째 숫자의 정렬 번째를 찾는다.&lt;/li&gt;
  &lt;li&gt;찾아낸 것을 return에 넣는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;컴퓨터에게는?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;for문으로 command를 돈다.&lt;/li&gt;
  &lt;li&gt;포문으로 돈 array에서 첫 번째 숫자와 두 번째 숫자를 빼내서 array[:]를 해준다.&lt;/li&gt;
  &lt;li&gt;array를 통해 나온 것을 sort를 통해 정렬 시켜준다.&lt;/li&gt;
  &lt;li&gt;세 번째 숫자를 빼내서 인덱싱을 한다.&lt;/li&gt;
  &lt;li&gt;뽑아 낸 값을 return에 담는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;코드&quot;&gt;코드&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;생각보다 굉장히 간단하게 해결했다.&lt;/li&gt;
  &lt;li&gt;하지만 다른 사람의 코드를 보고 좌절했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;…?&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 30 Apr 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/algorithm/2019/04/30/%E1%84%8B%E1%85%A1%E1%86%AF%E1%84%80%E1%85%A9%E1%84%85%E1%85%B5%E1%84%8C%E1%85%B3%E1%86%B7-05.-k%E1%84%87%E1%85%A5%E1%86%AB%E1%84%8D%E1%85%A2-%E1%84%89%E1%85%AE.html</link>
        <guid isPermaLink="true">http://localhost:4000/algorithm/2019/04/30/%E1%84%8B%E1%85%A1%E1%86%AF%E1%84%80%E1%85%A9%E1%84%85%E1%85%B5%E1%84%8C%E1%85%B3%E1%86%B7-05.-k%E1%84%87%E1%85%A5%E1%86%AB%E1%84%8D%E1%85%A2-%E1%84%89%E1%85%AE.html</guid>
        
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>2019_04_30_TIL</title>
        <description>&lt;h3 id=&quot;20190430-til&quot;&gt;2019.04.30 TIL&lt;/h3&gt;

&lt;h1 id=&quot;to-do&quot;&gt;To do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;유튜브 1회 올리기 - CSV, TXT 파일 다루기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;서버 부분 TIL하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기
        &lt;ul&gt;
          &lt;li&gt;복습은 하였으나 아직 TIL하기에는 부족하옵니다 ㅠㅠ&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;del&gt;알고리즘 1문제 풀기&lt;/del&gt;
        &lt;ul&gt;
          &lt;li&gt;알고리즘 스터디 관련 글 올려보기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;부트스트랩 적용하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;선생님께 헬프 요청하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;&lt;del&gt;운동하기&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;데일리 리포트 및 피드백 진행&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;독서&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;&lt;del&gt;영어 1개 암기&lt;/del&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;til&quot;&gt;TIL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;오늘 수업 중에는 bootstrap 위주로 많이 배웠다. 전체적인 틀은 가져가되 각각의 템플릿에 적용해야 될 때는 어떻게 해야되는지 알 수 있었다.&lt;/li&gt;
  &lt;li&gt;그리고 배포도 해보았는데 내일은 한번 더 배포하는 연습을 해봐야되겠다.&lt;/li&gt;
  &lt;li&gt;오늘은 피곤해서 조금 일찍 잠을 자려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;today-was&quot;&gt;Today was&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;05:40 기상&lt;/li&gt;
  &lt;li&gt;06:00 ~ 07:30 운동&lt;/li&gt;
  &lt;li&gt;07:30 ~ 08:00 유튜브 영상 촬영 및 업로드 (간단한 식사 병행)&lt;/li&gt;
  &lt;li&gt;08:00 ~ 09:20 TIL 및 프로젝트 진행&lt;/li&gt;
  &lt;li&gt;09:20 ~ 09:40 영어 1개 암기&lt;/li&gt;
  &lt;li&gt;09:40 ~ 10:00 학교 이동&lt;/li&gt;
  &lt;li&gt;10:00 ~ 12:00 수업 1&lt;/li&gt;
  &lt;li&gt;12:40 ~ 13:00 수업 1 복습&lt;/li&gt;
  &lt;li&gt;13:00 ~ 15:00 수업 2&lt;/li&gt;
  &lt;li&gt;15:30 ~ 16:00 코딩 1문제 + TIL&lt;/li&gt;
  &lt;li&gt;16:20 ~ 18:00 수업 1, 2 복습&lt;/li&gt;
  &lt;li&gt;18:00 ~ 19:00 저녁 식사 + 영어 단어 암기 x&lt;/li&gt;
  &lt;li&gt;19:00 ~ 21:30 수업 복습 및 프로젝트 진행&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;21:30 ~ 23:30 씻기 및 잠자기 전에 독서하기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;오늘은 정말 저녁 먹으면서 집에 갈까 고민을 많이 하였다. 하지만 그래도 참고 잘 마무리할 수 있었다.&lt;/li&gt;
  &lt;li&gt;요즘 수업이 끝나고 나면 너무 급격하게 체력이 빠진다. 이 문제를 해결하도록 노력하자!&lt;/li&gt;
  &lt;li&gt;체력 운동을 좀 하자 ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tomorrow-do&quot;&gt;Tomorrow do&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;DEV
    &lt;ul&gt;
      &lt;li&gt;유튜브 1회 올리기 - django 관련&lt;/li&gt;
      &lt;li&gt;배운 것 TIL하기&lt;/li&gt;
      &lt;li&gt;서버 배포해보기&lt;/li&gt;
      &lt;li&gt;알고리즘 1문제 풀기
        &lt;ul&gt;
          &lt;li&gt;알고리즘 스터디 관련 글 올려보기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트
    &lt;ul&gt;
      &lt;li&gt;url 관련 해결하기&lt;/li&gt;
      &lt;li&gt;form.as_p 해결하기&lt;/li&gt;
      &lt;li&gt;진도 나가보기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;About me
    &lt;ul&gt;
      &lt;li&gt;운동하기&lt;/li&gt;
      &lt;li&gt;데일리 리포트 및 피드백 진행&lt;/li&gt;
      &lt;li&gt;독서&lt;/li&gt;
      &lt;li&gt;영어 단어 암기&lt;/li&gt;
      &lt;li&gt;영어 1개 암기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 30 Apr 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/til/2019/04/30/TIL.html</link>
        <guid isPermaLink="true">http://localhost:4000/til/2019/04/30/TIL.html</guid>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>HTML 06. Server만들기(POST 및 CGI)</title>
        <description>&lt;h3 id=&quot;20190430-html을-통한-간단한-서버-구축하기2post&quot;&gt;2019.04.30 HTML을 통한 간단한 서버 구축하기2(POST)&lt;/h3&gt;

&lt;p&gt;# 질문에 답하기&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;cgi&quot;&gt;CGI&lt;/h2&gt;
&lt;p&gt;Common Gateway interface
CGI 단점 : 요청이 있을 때마다 프로세스(응용프로그램)을 새로 실행
CGI 장점: 특별한 추가 프로그램 없이도 여러 언어의 스크립트 실행 가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;특정 위치에 있는 것을 가지고 와야 할 때 쓰면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;권한주기-해당-파일마다-적용해줘야한다&quot;&gt;권한주기 (해당 파일마다 적용해줘야한다.)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;chomod ugo+x cgi/test.py&lt;/li&gt;
  &lt;li&gt;#!를 써서 파이썬 경로를 써줘야한다.&lt;/li&gt;
  &lt;li&gt;which python3&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구현&quot;&gt;구현&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;945&quot; alt=&quot;스크린샷 2019-04-30 오후 4 52 37&quot; src=&quot;https://user-images.githubusercontent.com/46436843/56947511-63675d00-6b68-11e9-8a89-984890a91cbc.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해당 경로를 지정해줘야한다.&lt;/li&gt;
  &lt;li&gt;해당 경로 파일에는 #!/usr/local/bin/python3이라는 python 경로를 지정해줘야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;testpy&quot;&gt;test.py&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;1123&quot; alt=&quot;스크린샷 2019-04-30 오후 4 54 46&quot; src=&quot;https://user-images.githubusercontent.com/46436843/56947615-ade8d980-6b68-11e9-850b-e86df289e10e.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이렇게 한 뒤에 서버에 접속해보면 test.py의 자료를 가지고 온다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;post&quot;&gt;POST&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;GET의 폼을 톨해 받은 자료를 POST로 받아와 해석하기&lt;/li&gt;
  &lt;li&gt;폼을 통해 키와 몸무게를 받아 BMI 지수 출력해주기&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;구현-1&quot;&gt;구현&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;859&quot; alt=&quot;스크린샷 2019-04-30 오후 4 57 03&quot; src=&quot;https://user-images.githubusercontent.com/46436843/56947733-ff916400-6b68-11e9-8199-85f583757e72.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;form_html에서 받은 자료를 method=’POST’로 하여 POST로 보내고 포스트에서 해당 내용을 받아서 처리해준다.&lt;/li&gt;
  &lt;li&gt;포스트에 담겨서 오는 내용은 주소창에 있는 자료를 해석하는게 아니므로 보안이 철저하지만 그만큼 해석하는게 쉽지 않다.&lt;/li&gt;
  &lt;li&gt;self.rfile.read 및 parse_qs를 사용한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 30 Apr 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/html/2019/04/30/HTML-06.-Server%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5(POST).html</link>
        <guid isPermaLink="true">http://localhost:4000/html/2019/04/30/HTML-06.-Server%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5(POST).html</guid>
        
        
        <category>HTML</category>
        
      </item>
    
      <item>
        <title>HTML 05. Server만들기(get)</title>
        <description>&lt;h3 id=&quot;20190430-html을-통한-간단한-서버-구축하기1get&quot;&gt;2019.04.30 HTML을 통한 간단한 서버 구축하기1(get)&lt;/h3&gt;

&lt;p&gt;# 질문에 답하기&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;http-server&quot;&gt;HTTP Server&lt;/h1&gt;

&lt;p&gt;&lt;img width=&quot;683&quot; alt=&quot;스크린샷 2019-04-30 오후 4 29 55&quot; src=&quot;https://user-images.githubusercontent.com/46436843/56946510-35cce480-6b65-11e9-9ffd-676201f7b190.png&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[출처 : jQuery Ajax &amp;amp; JSON&lt;/td&gt;
      &lt;td&gt;PoiemaWeb](https://poiemaweb.com/jquery-ajax-json)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;브라우저를 통해 사용자가 HTTP Rrequest message를 보내면&lt;/li&gt;
  &lt;li&gt;서버는 그 Message를 해석하고 Response Message로 응답한다.
    &lt;ol&gt;
      &lt;li&gt;어느 페이지로 접속하였느냐?&lt;/li&gt;
      &lt;li&gt;Query string은 어떤 데이터를 가지고 있느냐?&lt;/li&gt;
      &lt;li&gt;특정 스크립트 요청이 있느냐?&lt;/li&gt;
      &lt;li&gt;최종 응답을 HTML, 다운로드는 파일로 할 것이냐?&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;http-response만-하는-서버&quot;&gt;HTTP Response만 하는 서버&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Handler 필요 : 요청이 들어오면 어느 객체가 요청을 해석하고 처리할 것이냐?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주소에 붙여서 보내면 이것을 읽어서 해석하는데 이를 쿼리스트링이라고 하고 파싱을 통해 주소내 특정 값들을 분리한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;def run와 with handler는 같은 것이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;네이버 메인 페이지는 get방식 회원가입 할 때는 POST방식이다. &lt;br /&gt;
근데 장고 같은 프레임워크는 한 페이지에서 접속 Method에 따라 기능을 분기한다.
예) 회원가입 페이지 domain.com/singup/&lt;/li&gt;
  &lt;li&gt;Get방식으로 접속하면 회원가입 양식 보여주기&lt;/li&gt;
  &lt;li&gt;Post방식으로 하면 전달받은 데이터를 처리해서 회원가입 진행하기, 데이터베이스에 저장하기&lt;/li&gt;
  &lt;li&gt;한 주소로 고정되어 있어서 회원 가입에 오류가 있으면 회원가입으로 돌아가서 다시 메시지를 띄어야 한다. 우리가 쳤던 정보 내용들이 남아 있어야 한다. 한 페이지에서 돌아가기 때문에 비밀번호와 같은 것을 잘못 입력해도 그대로 남아 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;do_get-예시-코드&quot;&gt;do_GET 예시 코드&lt;/h2&gt;

&lt;p&gt;&lt;img width=&quot;724&quot; alt=&quot;스크린샷 2019-04-30 오후 4 35 17&quot; src=&quot;https://user-images.githubusercontent.com/46436843/56946740-f5ba3180-6b65-11e9-91ee-f5e62e72c8d9.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Handler 클래스를 만들고 그 아래에 GET과 POST를 두어서 2가지에 대해서 어떻게 처리할지에 대한 내용이 들어간다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;do_get을-통해-주소창에-들어간-내용-해석하기&quot;&gt;do_GET을 통해 주소창에 들어간 내용 해석하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;주소창에 들어간 http://127.0.0.1:8000/?height=181&amp;amp;weight=77와 같은 내용 해석하기&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.parse&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_qs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BaseHTTPRequestHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Content-type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'text/html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end_headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;query_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;query_vars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_qs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'weight'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_vars&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'height'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;height1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;weight1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'weight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;BMI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Your BMI is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BMI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
		
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
		
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;server_address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;httpd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTTPServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server_address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;serving at PORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;httpd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serve_forever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	
&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;결과값&quot;&gt;결과값&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;주소에 http://127.0.0.1:8000/?height=181&amp;amp;weight=77 임의로 넣고 실행&lt;/li&gt;
  &lt;li&gt;print창에
    &lt;ul&gt;
      &lt;li&gt;height=181&amp;amp;weight=77&lt;/li&gt;
      &lt;li&gt;{‘height’: [‘181’], ‘weight’: [‘77’]}&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;http 창에
    &lt;ul&gt;
      &lt;li&gt;your BMI is 23.503556057507403 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 30 Apr 2019 23:06:23 +0900</pubDate>
        <link>http://localhost:4000/html/2019/04/30/HTML-05.-Server%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5(get).html</link>
        <guid isPermaLink="true">http://localhost:4000/html/2019/04/30/HTML-05.-Server%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5(get).html</guid>
        
        
        <category>HTML</category>
        
      </item>
    
  </channel>
</rss>
